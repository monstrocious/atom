[{"path":"/Users/Mo/git/aws-tools/cloudformation/amzn_linux_asg_no_scaling_ephemeral_x2.json"},{"path":"/Users/Mo/git/aws-tools/cloudformation/archivestreamers_live.json"},{"path":"/Users/Mo/git/aws-tools/cloudformation/amzn_linux_asg_and_elb_dns_no_scaling_public.json"},{"text":"{\n  \"AWSTemplateFormatVersion\" : \"2010-09-09\",\n  \"Description\" : \"Top-Level CloudFormation Stack\",\n\n  \"Parameters\" : {\n\n    \"Project\": {\n      \"Description\": \"Project name.\",\n      \"Type\": \"String\",\n      \"Default\": \"YouNow\"\n    },\n    \"PrivateDomain\": {\n      \"Description\": \"Private domain name.\",\n      \"Type\": \"String\",\n      \"Default\": \"awsinternal.younow.com\"\n    },\n    \"BootstrapBucket\": {\n      \"Description\":\"Name of S3 bucket containing bootstrap scripts. If using appended region name, do not include.\",\n      \"Type\": \"String\",\n      \"Default\": \"younow-aws-tools-us-east-1/live/bootstrap\"\n    },\n    \"CommonBootstrapFile\": {\n      \"Description\": \"Name of common bootstrap file to be used by many instances.\",\n      \"Type\": \"String\",\n      \"Default\": \"common.sh\"\n    },\n    \"CloudFormationBucket\": {\n      \"Description\": \"Name of S3 bucket containing CloudFormation templates. If using appended region name, do not include.\",\n      \"Type\": \"String\",\n      \"Default\": \"younow-aws-tools-us-east-1/live/cloudformation\"\n    },\n    \"CommonEC2Key\": {\n      \"Description\": \"Common EC2 key pair to be used across instances. If using appended region, do not include.\",\n      \"Type\": \"String\",\n      \"Default\": \"common-\"\n    },\n    \"Environment\": {\n      \"Description\": \"Environment name assigned to EC2 instances (e.g. 'prod' or 'test').\",\n      \"Type\": \"String\",\n      \"Default\": \"Live\",\n      \"ConstraintDescription\": \"Must be a string.\"\n    },\n    \"SSLCertId\": {\n      \"Description\": \"SSL Cert Id\",\n      \"Type\": \"String\",\n      \"Default\": \"\",\n      \"ConstraintDescription\": \"Must be a Id.\"\n    },\n    \"WebAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"CronAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"FeedCronAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"TrackAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"OpsAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"AdminAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"Neo4jAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"DataAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"DataWorkerAMI\": {\n      \"Description\": \"AMI for Data Science applications\",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"StaticCronAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"BlogTvAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"TungstenAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"FluentdAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"WowzaAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"WowzaVIPAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"WowzaDirectAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"ArchiveStreamerAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"DeployerAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"CleanSpeakAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"McuPipelineAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"McuPipelineVIPAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"McuPipelineSpecialAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"McuMirrorAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"McuRestAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"McuRestVIPAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"McuRestSpecialAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"McuKurentoAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"McuBuildAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"JenkinsAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"AnsibleAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"PrerenderAMI\": {\n      \"Description\": \"AMI for \",\n      \"Type\": \"AWS::EC2::Image::Id\"\n    },\n    \"DynamoBucket\": {\n      \"Description\": \"Remove this default value and enter your pre-created S3 Bucket url upto folder name. (Please include the trailing /. Example: https://s3.amazonaws.com/my-bucket/ should be input as s3://my-bucket/). It will be used for storing a copy of Dynamic DynamoDB configuration file.\",\n      \"Type\": \"String\"\n    },\n    \"RDSSnapShotID\": {\n      \"Description\": \"Snapshot for rds to boot from\",\n      \"Type\": \"String\",\n      \"Default\": \"\"\n    },\n    \"InternalHostedZone\" : {\n      \"Description\" : \"Route53 private hosted zone\",\n      \"Type\" : \"String\"\n    },\n    \"PublicHostedZone\" : {\n      \"Description\" : \"Route53 public hosted zone\",\n      \"Type\" : \"String\"\n    },\n    \"RedshiftUserPassword\" : {\n      \"Description\": \"Password of the Master User\",\n      \"Type\": \"String\",\n      \"NoEcho\": \"True\"\n    },\n    \"RedshiftSnapshotIdentifier\" : {\n      \"Description\": \"Id of snapshot you thats being restored\",\n      \"Type\": \"String\",\n      \"Default\": \"\"\n    },\n    \"VPNCIDR\" : {\n      \"Description\" : \"CIDR block of the VPC.\",\n      \"Type\" : \"String\",\n      \"MinLength\" : \"9\",\n      \"MaxLength\" : \"18\",\n      \"Default\" : \"10.0.0.0/8\",\n      \"AllowedPattern\" : \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\",\n      \"ConstraintDescription\" : \"Must be valid CIDR notation (i.e. x.x.x.x/x).\"\n    },\n    \"DatasciBucket\": {\n      \"Description\": \"S3 bucket for Data Science applications.\",\n      \"Type\": \"String\",\n      \"Default\": \"younow-datasci\"\n    }\n\n  },\n  \"Conditions\": {\n    \"RedshiftSnapshotCondition\": { \"Fn::Equals\": [ { \"Ref\": \"RedshiftSnapshotIdentifier\" }, \"\"] }\n  },\n  \"Mappings\" : {\n    \"AmazonLinux201509\" : {\n      \"us-east-1\"      : { \"64HVMGP2\" : \"ami-e3106686\", \"64PVStandard\" : \"ami-971066f2\", \"CodeDeployHVM\": \"ami-25c5674e\" },\n      \"us-west-1\"      : { \"64HVMGP2\" : \"ami-cd3aff89\", \"64PVStandard\" : \"ami-c93aff8d\" },\n      \"us-west-2\"      : { \"64HVMGP2\" : \"ami-9ff7e8af\", \"64PVStandard\" : \"ami-bdf7e88d\" },\n      \"eu-central-1\"   : { \"64HVMGP2\" : \"ami-daaeaec7\", \"64PVStandard\" : \"ami-a0aeaebd\" },\n      \"eu-west-1\"      : { \"64HVMGP2\" : \"ami-69b9941e\", \"64PVStandard\" : \"ami-8fbe93f8\" },\n      \"ap-northeast-1\" : { \"64HVMGP2\" : \"ami-9a2fb89a\", \"64PVStandard\" : \"ami-a42fb8a4\" },\n      \"ap-southeast-1\" : { \"64HVMGP2\" : \"ami-52978200\", \"64PVStandard\" : \"ami-4c97821e\" },\n      \"ap-southeast-2\" : { \"64HVMGP2\" : \"ami-c11856fb\", \"64PVStandard\" : \"ami-851856bf\" },\n      \"sa-east-1\"      : { \"64HVMGP2\" : \"ami-3b0c9926\", \"64PVStandard\" : \"ami-010c991c\" }\n    },\n    \"OpenVpn\": {\n      \"us-east-1\" : { \"AMI\" : \"ami-4ce1e724\" },\n      \"us-west-1\" : { \"AMI\" : \"ami-bfcd20fb\" },\n      \"us-west-2\" : { \"AMI\" : \"ami-fd6256cd\" },\n      \"eu-west-1\" : { \"AMI\" : \"ami-cf1577b8\" },\n      \"ap-southeast-1\" : { \"AMI\" : \"ami-18d5e84a\" },\n      \"ap-southeast-2\" : { \"AMI\" : \"ami-8f89f4b5\" },\n      \"ap-northeast-1\" : { \"AMI\" : \"ami-6213d462\" },\n      \"sa-east-1\" : { \"AMI\" : \"ami-311c992c\" }\n    },\n    \"Params\": {\n      \"web\" : {\n\t\"InstanceType\" : \"c4.xlarge\",\n\t\"ASGHealthCheckType\" : \"ELB\",\n\t\"MinInstancesCount\" : \"9\",\n\t\"MaxInstancesCount\" : \"150\",\n\t\"VeryHighPeriodCount\": \"1\",\n        \"HighPeriodCount\": \"5\",\n        \"LowPeriodCount\": \"3\"\n      },\n      \"staticcron\" : {\n\t\"InstanceType\" : \"m4.large\",\n\t\"MinInstancesCount\" : \"1\",\n\t\"MaxInstancesCount\" : \"2\"\n      },\n      \"cron\" : {\n\t\"InstanceType\" : \"c4.xlarge\",\n\t\"ASGHealthCheckType\" : \"ELB\",\n\t\"MinInstancesCount\" : \"0\",\n\t\"MaxInstancesCount\" : \"0\",\n        \"HighPeriodCount\": \"2\",\n        \"LowPeriodCount\": \"3\"\n      },\n      \"feedcron\" : {\n\t\"InstanceType\" : \"c4.xlarge\",\n\t\"ASGHealthCheckType\" : \"ELB\",\n\t\"MinInstancesCount\" : \"2\",\n\t\"MaxInstancesCount\" : \"30\",\n        \"HighPeriodCount\": \"2\",\n        \"LowPeriodCount\": \"3\"\n      },\n      \"archive\" : {\n\t\"InstanceType\" : \"m3.large\",\n\t\"ASGHealthCheckType\" : \"ELB\",\n\t\"MinInstancesCount\" : \"5\",\n\t\"MaxInstancesCount\" : \"16\",\n        \"HighPeriodCount\": \"2\",\n        \"LowPeriodCount\": \"2\"\n      },\n      \"wowza\" : {\n\t\"InstanceType\" : \"c4.8xlarge\",\n\t\"MinInstancesCount\" : \"4\",\n\t\"MaxInstancesCount\" : \"30\"\n      },\n      \"wowzavip\" : {\n\t\"InstanceType\" : \"c4.8xlarge\",\n\t\"MinInstancesCount\" : \"1\",\n\t\"MaxInstancesCount\" : \"10\"\n      },\n      \"wowzadirect\" : {\n  \"InstanceType\" : \"c4.8xlarge\",\n  \"MinInstancesCount\" : \"1\",\n  \"MaxInstancesCount\" : \"1\"\n      },\n      \"ops\" : {\n\t\"InstanceType\" : \"c4.xlarge\",\n\t\"ASGHealthCheckType\" : \"ELB\",\n\t\"MinInstancesCount\" : \"4\",\n\t\"MaxInstancesCount\" : \"24\",\n        \"HighPeriodCount\": \"2\",\n        \"LowPeriodCount\": \"3\"\n      },\n      \"cleanspeak\" : {\n\t\"InstanceType\" : \"m3.large\",\n\t\"ASGHealthCheckType\" : \"ELB\",\n\t\"MinInstancesCount\" : \"1\",\n\t\"MaxInstancesCount\" : \"2\"\n      },\n      \"mcurest\" : {\n\t\"InstanceType\" : \"m4.large\",\n\t\"ASGHealthCheckType\" : \"ELB\",\n\t\"MinInstancesCount\" : \"2\",\n\t\"MaxInstancesCount\" : \"4\",\n        \"HighPeriodCount\": \"1\",\n        \"LowPeriodCount\": \"1\"\n      },\n      \"mcurestvip\" : {\n\t\"InstanceType\" : \"m4.large\",\n\t\"ASGHealthCheckType\" : \"ELB\",\n\t\"MinInstancesCount\" : \"2\",\n\t\"MaxInstancesCount\" : \"4\",\n        \"HighPeriodCount\": \"1\",\n        \"LowPeriodCount\": \"1\"\n      },\n      \"mcurestspecial\" : {\n\t\"InstanceType\" : \"m4.large\",\n\t\"ASGHealthCheckType\" : \"ELB\",\n\t\"MinInstancesCount\" : \"2\",\n\t\"MaxInstancesCount\" : \"4\",\n        \"HighPeriodCount\": \"1\",\n        \"LowPeriodCount\": \"1\"\n      },\n      \"fluentd\" : {\n\t\"InstanceType\" : \"c4.xlarge\",\n\t\"ASGHealthCheckType\" : \"EC2\",\n\t\"MinInstancesCount\" : \"1\",\n\t\"MaxInstancesCount\" : \"2\"\n      },\n      \"fluentdphp\" : {\n\t\"InstanceType\" : \"c4.xlarge\",\n\t\"ASGHealthCheckType\" : \"ELB\",\n\t\"MinInstancesCount\" : \"1\",\n\t\"MaxInstancesCount\" : \"2\"\n      },\n      \"track\" : {\n\t\"InstanceType\" : \"m4.large\",\n\t\"ASGHealthCheckType\" : \"ELB\",\n\t\"MinInstancesCount\" : \"2\",\n\t\"MaxInstancesCount\" : \"4\",\n        \"HighPeriodCount\": \"1\",\n        \"LowPeriodCount\": \"4\"\n      },\n      \"admin\" : {\n\t\"InstanceType\" : \"c4.xlarge\",\n\t\"ASGHealthCheckType\" : \"ELB\",\n\t\"MinInstancesCount\" : \"1\",\n\t\"MaxInstancesCount\" : \"2\"\n      },\n      \"blogtv\" : {\n\t\"InstanceType\" : \"t1.micro\",\n\t\"ASGHealthCheckType\" : \"ELB\",\n\t\"MinInstancesCount\" : \"1\",\n\t\"MaxInstancesCount\" : \"4\"\n      },\n      \"prerender\" : {\n\t\"InstanceType\" : \"m4.large\",\n\t\"ASGHealthCheckType\" : \"ELB\",\n\t\"MinInstancesCount\" : \"1\",\n\t\"MaxInstancesCount\" : \"300\",\n        \"HighPeriodCount\": \"3\",\n        \"LowPeriodCount\": \"3\"\n      },\n      \"mcupipeline\" : {\n\t\"InstanceType\" : \"g2.2xlarge\",\n\t\"MinInstancesCount\" : \"18\",\n\t\"MaxInstancesCount\" : \"100\",\n        \"HighPeriodCount\": \"5\",\n        \"LowPeriodCount\": \"5\"\n      },\n      \"mcupipelinevip\" : {\n\t\"InstanceType\" : \"g2.2xlarge\",\n\t\"MinInstancesCount\" : \"2\",\n\t\"MaxInstancesCount\" : \"14\",\n        \"HighPeriodCount\": \"5\",\n        \"LowPeriodCount\": \"5\"\n      },\n      \"mcupipelinespecial\" : {\n\t\"InstanceType\" : \"g2.2xlarge\",\n\t\"MinInstancesCount\" : \"1\",\n\t\"MaxInstancesCount\" : \"2\",\n        \"HighPeriodCount\": \"5\",\n        \"LowPeriodCount\": \"5\"\n      },\n      \"tungsten\" : {\n\t\"InstanceType\" : \"m4.xlarge\",\n\t\"MinInstancesCount\" : \"0\",\n\t\"MaxInstancesCount\" : \"2\"\n      },\n      \"mcubuild\" : {\n\t\"InstanceType\" : \"c4.xlarge\",\n\t\"MinInstancesCount\" : \"1\",\n\t\"MaxInstancesCount\" : \"2\"\n      },\n      \"ansible\" : {\n        \"ASGHealthCheckType\" : \"ELB\",\n\t\"InstanceType\" : \"c4.large\",\n\t\"MinInstancesCount\" : \"1\",\n\t\"MaxInstancesCount\" : \"2\"\n      },\n      \"deployer\" : {\n\t\"InstanceType\" : \"c4.large\",\n\t\"MinInstancesCount\" : \"1\",\n\t\"MaxInstancesCount\" : \"2\"\n      },\n      \"mcumirror\" : {\n\t\"InstanceType\" : \"m4.large\",\n\t\"MinInstancesCount\" : \"0\",\n\t\"MaxInstancesCount\" : \"0\"\n      },\n      \"neo4j\" : {\n\t\"InstanceType\" : \"c4.8xlarge\",\n\t\"MinInstancesCount\" : \"1\",\n\t\"MaxInstancesCount\" : \"2\"\n      },\n      \"data\" : {\n\t\"InstanceType\" : \"c4.large\",\n\t\"MinInstancesCount\" : \"1\",\n\t\"MaxInstancesCount\" : \"2\"\n      },\n      \"dataworker\" : {\n\t\"InstanceType\" : \"r3.large\",\n\t\"MinInstancesCount\" : \"1\",\n\t\"MaxInstancesCount\" : \"2\"\n      }\n    }\n  },\n\n  \"Resources\" : {\n\n    \"IAM\": {\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"Iam.json\" ] ] },\n        \"Parameters\": {\n          \"CloudtrailS3BucketARN\":              \"arn:aws:s3:::younow-cloudtrail-us-east-1\",\n          \"BootstrapS3BucketARN\":               { \"Fn::Join\": [ \"\", [ \"arn:aws:s3:::\", { \"Ref\" : \"BootstrapBucket\" } ] ] },\n          \"CloudFormationS3BucketARN\":          { \"Fn::Join\": [ \"\", [ \"arn:aws:s3:::\", { \"Ref\" : \"CloudFormationBucket\" } ] ] },\n          \"DatasciS3BucketARN\":                 { \"Fn::Join\": [ \"\", [ \"arn:aws:s3:::\", { \"Ref\" : \"DatasciBucket\" } ] ] },\n          \"InternalHostedZoneID\":               \"Z3NDPMKV14PSOC\"\n        }\n      }\n    },\n\n    \"SNS\": {\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"SNS.json\" ] ] },\n        \"Parameters\": {\n          \"PrimaryEmailAddress\":                \"ops+younow@rightbrainnetworks.com\",\n          \"PrimarySNSDisplayName\":              \"AWS-YouNow\",\n          \"JenkinsSNSDisplayName\":              \"AWS-YouNow-Jenkins\",\n          \"Environment\":                      { \"Ref\": \"Environment\" }\n        }\n      }\n    },\n\n    \"Network\": {\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"Network.json\" ] ] },\n          \"Parameters\": {\n            \"Project\":                      { \"Ref\": \"Project\" },\n            \"Environment\":                      { \"Ref\": \"Environment\" },\n            \"DomainName\":                       \"younow.internal\",\n            \"VPNCIDR\":                          { \"Ref\": \"VPNCIDR\" }\n          }\n      }\n    },\n\n    \"SecurityGroups\": {\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"Security_Groups.json\" ] ] },\n        \"Parameters\": {\n          \"Project\":                        { \"Ref\": \"Project\" },\n          \"VPCID\" :                             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.VPCID\" ] },\n          \"VPCCIDR\":                            { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.VPCSubnet\" ] },\n          \"VPNCIDR\":                            { \"Ref\": \"VPNCIDR\" },\n          \"Environment\":                      { \"Ref\": \"Environment\" }\n        }\n      }\n    },\n\n    \"Bastion\": {\n      \"DependsOn\": [  ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"amzn_linux_asg_no_scaling.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"Role\":                               \"bastion\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceType\":                       \"t2.micro\",\n          \"AMI\":                                { \"Fn::FindInMap\" : [ \"AmazonLinux201509\", { \"Ref\" : \"AWS::Region\" }, \"64HVMGP2\"] },\n          \"BootstrapFileName\":                  \"bastion.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"10\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 \"EC2\",\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  \"2\",\n          \"MinInstancesCount\":                  \"1\",\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"100\",\n          \"HighCPUPeriod\":                      \"60\",\n          \"LowCPUThreshold\":                    \"10\",\n          \"LowCPUPeriod\":                       \"60\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.BastionInstanceProfile\" ] },\n          \"InstanceSubnetAZ1\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.DMZAz1Subnet\" ] },\n          \"InstanceSubnetAZ2\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.DMZAz2Subnet\" ] },\n          \"InstanceSubnetAZ3\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.DMZAz3Subnet\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.BastionSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ \"bastion-\", { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" }\n        }\n      }\n    },\n    \"VPN\": {\n      \"DependsOn\": [  ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"vyos_vgw_vpn.json\" ] ] },\n        \"Parameters\": {\n          \"Role\":                               \"Vyos\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceTypeAz1\":                    \"m4.xlarge\",\n          \"InstanceTypeAz2\":                    \"m4.xlarge\",\n          \"AMIAz1\":                             \"ami-9c9a12f4\",\n          \"AMIAz2\":                             \"ami-9c9a12f4\",\n          \"AssociatePublicIPAddress\":           \"True\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.openswanInstanceProfile\" ] },\n          \"InstanceSubnetAZ1\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] },\n          \"PrivateIpAz1\":                       \"10.3.32.10\",\n          \"InstanceSubnetAZ2\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] },\n          \"PrivateIpAz2\":                       \"10.3.64.10\",\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.OpenSwanSecurityGroupId\" ] },\n\n          \"VPC\":                                { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.VPCID\" ] },\n          \"RouteTableIds\":                        { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ListOfRouteTables\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"Project\":                            { \"Ref\": \"Project\" },\n          \"LambdaFunctionCodeBucket\":           { \"Fn::Join\": [ \"-\", [ \"younow-aws-tools\", { \"Ref\": \"AWS::Region\" } ] ] },\n          \"LambdaFunctionCodeZip\":              \"live/bootstrap/Always_On.zip\"\n        }\n      }\n    },\n\n    \"Web\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"amzn_linux_asg_elb_dns_100_scaleup_public.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"IsELBInternal\":                      \"False\",\n          \"UseELBCookieStickinessPolicy\":       \"False\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"Role\":                               \"web\",\n          \"Environment\":                        { \"Ref\" : \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"web\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"WebAMI\" },\n          \"BootstrapFileName\":                  \"common_v2.sh\",\n          \"RootEBSVolumeSize\":                  \"30\",\n\n          \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"web\", \"ASGHealthCheckType\" ] },\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"web\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"web\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"3\",\n          \"ScaleUpCooldown\":                    \"240\",\n          \"ScaleDownAdjustment\":                \"-3\",\n          \"ScaleDownCooldown\":                  \"120\",\n\n\t  \"VeryHighCPUThreshold\":\t\t\"85\",\n\t  \"VeryHighCPUPeriod\":\t\t\t\"60\",\n          \"HighCPUThreshold\":                   \"65\",\n          \"HighCPUPeriod\":                      \"60\",\n          \"LowCPUThreshold\":                    \"47\",\n          \"LowCPUPeriod\":                       \"60\",\n\n\t  \"VeryHighPeriodCount\":\t\t{ \"Fn::FindInMap\" : [ \"Params\", \"web\", \"VeryHighPeriodCount\" ] },\n          \"HighPeriodCount\":                    { \"Fn::FindInMap\" : [ \"Params\", \"web\", \"HighPeriodCount\" ] },\n          \"LowPeriodCount\":                     { \"Fn::FindInMap\" : [ \"Params\", \"web\", \"LowPeriodCount\" ] },\n\n          \"RollingUpdateMinInstancesInService\": \"21\",\n          \"RollingUpdateMaxBatchSize\":          \"3\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n\t  \"IdleTimeoutValue\":\t\t\t\"30\",\n\n          \"HealthCheckTarget\":                  \"HTTP:80/api/checkDBs.php\",\n          \"ELBConnectionDrainingTimeout\":       \"120\",\n          \"ELBListenerProtocol\":                \"HTTP\",\n          \"ELBListenerPort\":                    \"80\",\n\t  \"ELBListenerProtocol2\":\t\t\"HTTPS\",\n\t  \"ELBListenerPort2\":\t\t\t\"443\",\n          \"InstanceListenerProtocol\":           \"HTTP\",\n          \"InstanceListenerPort\":               \"80\",\n\t  \"InstanceListenerProtocol2\":\t\t\"HTTP\",\n          \"InstanceListenerPort2\":\t\t\"80\",\n          \"ELBListenerCert2\":                   { \"Ref\": \"SSLCertId\" },\n          \"ELBHealthyThreshold\":                \"2\",\n          \"ELBUnhealthyThreshold\":              \"10\",\n          \"ELBIntervalThreshold\":               \"35\",\n          \"ELBTimeoutThreshold\":                \"15\",\n          \"High500sThreshold\":                  \"500\",\n          \"High500sPeriod\":                     \"60\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.webInstanceProfile\" ] },\n          \"InstanceSubnetList\":                 { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz3Subnet\" ] }] ] },\n          \"ELBSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz3Subnet\" ] } ]] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.webSecurityGroupId\" ] },\n          \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.webElbSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" },\n          \"HostedZoneName\":                     { \"Ref\": \"InternalHostedZone\" }\n        }\n      }\n    },\n\n    \"StaticCron\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"staticcron_live.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"Role\":                               \"staticcron\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"staticcron\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"StaticCronAMI\" },\n          \"BootstrapFileName\":                  \"static_cron.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"30\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 \"EC2\",\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"staticcron\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"staticcron\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"200\",\n          \"HighCPUPeriod\":                      \"300\",\n          \"LowCPUThreshold\":                    \"40\",\n          \"LowCPUPeriod\":                       \"300\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M90S\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.staticcronInstanceProfile\" ] },\n          \"InstanceSubnetAZ1\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] },\n          \"InstanceSubnetAZ2\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] },\n          \"InstanceSubnetAZ3\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz3Subnet\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.staticcronSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" }\n        }\n      }\n    },\n\n      \"Cron\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"cron_asg_elb_dns_public.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"IsELBInternal\":                      \"True\",\n          \"UseELBCookieStickinessPolicy\":       \"False\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"Role\":                               \"cron\",\n          \"Environment\":                        { \"Ref\" : \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"cron\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"CronAMI\" },\n          \"BootstrapFileName\":                  { \"Ref\" : \"CommonBootstrapFile\" },\n          \"AssociatePublicIPAddress\":           \"False\",\n          \"RootEBSVolumeSize\":                  \"30\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"cron\", \"ASGHealthCheckType\" ] },\n          \"HealthCheckGracePeriod\":             \"400\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"cron\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"cron\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"2\",\n          \"ScaleUpCooldown\":                    \"240\",\n          \"ScaleDownAdjustment\":                \"-2\",\n          \"ScaleDownCooldown\":                  \"180\",\n\n          \"HighCPUThreshold\":                   \"92\",\n          \"HighCPUPeriod\":                      \"60\",\n          \"LowCPUThreshold\":                    \"50\",\n          \"LowCPUPeriod\":                       \"60\",\n\n          \"HighPeriodCount\":                    { \"Fn::FindInMap\" : [ \"Params\", \"cron\", \"HighPeriodCount\" ] },\n          \"LowPeriodCount\":                     { \"Fn::FindInMap\" : [ \"Params\", \"cron\", \"LowPeriodCount\" ] },\n\n          \"RollingUpdateMinInstancesInService\": \"6\",\n          \"RollingUpdateMaxBatchSize\":          \"2\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"HealthCheckTarget\":                  \"HTTP:80/api/checkDBs.php\",\n          \"ELBConnectionDrainingTimeout\":       \"120\",\n          \"ELBListenerProtocol\":                \"HTTP\",\n          \"ELBListenerPort\":                    \"80\",\n          \"ELBListenerProtocol2\":               \"HTTPS\",\n          \"ELBListenerPort2\":                   \"443\",\n          \"InstanceListenerProtocol\":           \"HTTP\",\n          \"InstanceListenerPort\":               \"80\",\n          \"InstanceListenerProtocol2\":          \"HTTP\",\n          \"InstanceListenerPort2\":              \"80\",\n          \"ELBListenerCert2\":                   { \"Ref\": \"SSLCertId\" },\n          \"ELBHealthyThreshold\":                \"2\",\n          \"ELBUnhealthyThreshold\":              \"10\",\n          \"ELBIntervalThreshold\":               \"60\",\n          \"ELBTimeoutThreshold\":                \"15\",\n          \"High500sThreshold\":                  \"500\",\n          \"High500sPeriod\":                     \"60\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.cronInstanceProfile\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.cronSecurityGroupId\" ] },\n          \"InstanceSubnetList\":                 { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] }] ] },\n          \"ELBSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] } ]] },\n          \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.cronElbSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                            { \"Ref\": \"Project\" },\n          \"HostedZoneName\":                     { \"Ref\": \"InternalHostedZone\" }\n        }\n      }\n    },\n    \"FeedCron\": {\n    \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n    \"Type\": \"AWS::CloudFormation::Stack\",\n    \"Properties\": {\n      \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"feedcron_asg_elb_dns_public.json\" ] ] },\n      \"Parameters\": {\n        \"IsMultiAZStack\":                     \"True\",\n        \"IsELBInternal\":                      \"True\",\n        \"UseELBCookieStickinessPolicy\":       \"False\",\n        \"ELBStickySessionLength\":             \"60\",\n        \"Role\":                               \"feedcron\",\n        \"Environment\":                        { \"Ref\" : \"Environment\" },\n        \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"feedcron\", \"InstanceType\" ] },\n        \"AMI\":                                { \"Ref\" : \"FeedCronAMI\" },\n        \"BootstrapFileName\":                  \"common_v2.sh\",\n        \"AssociatePublicIPAddress\":           \"False\",\n        \"RootEBSVolumeSize\":                  \"30\",\n        \"EBSVolumeType\":                      \"gp2\",\n        \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n        \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"feedcron\", \"ASGHealthCheckType\" ] },\n        \"HealthCheckGracePeriod\":             \"400\",\n        \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"feedcron\", \"MaxInstancesCount\" ] },\n        \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"feedcron\", \"MinInstancesCount\" ] },\n        \"ScaleUpAdjustment\":                  \"2\",\n        \"ScaleUpCooldown\":                    \"240\",\n        \"ScaleDownAdjustment\":                \"-2\",\n        \"ScaleDownCooldown\":                  \"180\",\n\n        \"HighCPUThreshold\":                   \"92\",\n        \"HighCPUPeriod\":                      \"60\",\n        \"LowCPUThreshold\":                    \"50\",\n        \"LowCPUPeriod\":                       \"60\",\n\n        \"HighPeriodCount\":                    { \"Fn::FindInMap\" : [ \"Params\", \"feedcron\", \"HighPeriodCount\" ] },\n        \"LowPeriodCount\":                     { \"Fn::FindInMap\" : [ \"Params\", \"feedcron\", \"LowPeriodCount\" ] },\n\n        \"RollingUpdateMinInstancesInService\": \"6\",\n        \"RollingUpdateMaxBatchSize\":          \"2\",\n        \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n        \"HealthCheckTarget\":                  \"HTTP:80/api/checkDBs.php\",\n        \"ELBConnectionDrainingTimeout\":       \"120\",\n        \"ELBListenerProtocol\":                \"HTTP\",\n        \"ELBListenerPort\":                    \"80\",\n        \"ELBListenerProtocol2\":               \"HTTPS\",\n        \"ELBListenerPort2\":                   \"443\",\n        \"InstanceListenerProtocol\":           \"HTTP\",\n        \"InstanceListenerPort\":               \"80\",\n        \"InstanceListenerProtocol2\":          \"HTTP\",\n        \"InstanceListenerPort2\":              \"80\",\n        \"ELBListenerCert2\":                   { \"Ref\": \"SSLCertId\" },\n        \"ELBHealthyThreshold\":                \"2\",\n        \"ELBUnhealthyThreshold\":              \"10\",\n        \"ELBIntervalThreshold\":               \"60\",\n        \"ELBTimeoutThreshold\":                \"15\",\n        \"High500sThreshold\":                  \"500\",\n        \"High500sPeriod\":                     \"60\",\n\n        \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.cronInstanceProfile\" ] },\n        \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.cronSecurityGroupId\" ] },\n        \"InstanceSubnetList\":                 { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] }] ] },\n        \"ELBSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] } ]] },\n        \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.cronElbSecurityGroupId\" ] },\n\n        \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n        \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n        \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n        \"Project\":                            { \"Ref\": \"Project\" },\n        \"HostedZoneName\":                     { \"Ref\": \"InternalHostedZone\" }\n      }\n    }\n  },\n\n\n      \"ArchiveStreamer\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"archivestreamers_live.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"IsELBInternal\":                      \"False\",\n          \"UseELBCookieStickinessPolicy\":       \"False\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"ELBCondition\":                       \"False\",\n          \"Role\":                               \"archive\",\n          \"Environment\":                        { \"Ref\" : \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"archive\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"ArchiveStreamerAMI\" },\n          \"BootstrapFileName\":                  \"common_v2.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"30\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n          \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"archive\", \"ASGHealthCheckType\" ] },\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"archive\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"archive\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"240\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"180\",\n          \"HighCPUThreshold\":                   \"75\",\n          \"HighCPUPeriod\":                      \"60\",\n          \"LowCPUThreshold\":                    \"40\",\n          \"LowCPUPeriod\":                       \"60\",\n          \"HighPeriodCount\":                    { \"Fn::FindInMap\" : [ \"Params\", \"archive\", \"HighPeriodCount\" ] },\n          \"LowPeriodCount\":                     { \"Fn::FindInMap\" : [ \"Params\", \"archive\", \"LowPeriodCount\" ] },\n          \"RollingUpdateMinInstancesInService\": \"5\",\n          \"RollingUpdateMaxBatchSize\":          \"2\",\n          \"RollingUpdatePauseTime\":             \"PT0M120S\",\n          \"HealthCheckTarget\":                  \"HTTP:80/api/checkStreamer.php\",\n          \"ELBConnectionDrainingTimeout\":       \"120\",\n          \"ELBHealthyThreshold\":                \"2\",\n          \"ELBListenerCert\":                    { \"Ref\": \"SSLCertId\" },\n          \"ELBUnhealthyThreshold\":              \"10\",\n          \"ELBIntervalThreshold\":               \"120\",\n          \"ELBTimeoutThreshold\":                \"15\",\n          \"High500sThreshold\":                  \"500\",\n          \"High500sPeriod\":                     \"60\",\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.archiveInstanceProfile\" ] },\n          \"InstanceSubnetList\":                 { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] }] ] },\n          \"ELBSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] } ]] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.archiveSecurityGroupId\" ] },\n          \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.archiveElbSecurityGroupId\" ] },\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" },\n          \"HostedZoneName\":                     { \"Ref\": \"PublicHostedZone\" }\n        }\n      }\n    },\n\n    \"Wowza\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"amzn_linux_asg_no_scaling_ephemeral_x2.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"Role\":                               \"wowza\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"wowza\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"WowzaAMI\" },\n          \"BootstrapFileName\":                  \"common_v2.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"120\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 \"EC2\",\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"wowza\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"wowza\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"75\",\n          \"HighCPUPeriod\":                      \"60\",\n          \"LowCPUThreshold\":                    \"40\",\n          \"LowCPUPeriod\":                       \"60\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.wowzaInstanceProfile\" ] },\n          \"InstanceSubnetAZ1\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] },\n          \"InstanceSubnetAZ2\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.wowzaSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" }\n        }\n      }\n    },\n\n    \"WowzaVIP\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"amzn_linux_asg_no_scaling_ephemeral_x2.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"Role\":                               \"wowzavip\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"wowzavip\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"WowzaVIPAMI\" },\n          \"BootstrapFileName\":                  \"common_v2.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"120\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 \"EC2\",\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"wowzavip\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"wowzavip\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"75\",\n          \"HighCPUPeriod\":                      \"60\",\n          \"LowCPUThreshold\":                    \"40\",\n          \"LowCPUPeriod\":                       \"60\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.wowzaInstanceProfile\" ] },\n          \"InstanceSubnetAZ1\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] },\n          \"InstanceSubnetAZ2\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.wowzaSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" }\n        }\n      }\n    },\n\n    \"WowzaDirect\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"wowzadirect_dual_elb_asg.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"IsELBInternal\":                      \"False\",\n          \"UseELBCookieStickinessPolicy\":       \"False\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"Role\":                               \"wowzadirect\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"wowzadirect\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"WowzaDirectAMI\" },\n          \"BootstrapFileName\":                  \"common_v2.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"120\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 \"EC2\",\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"wowzadirect\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"wowzadirect\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HealthCheckTarget\":                  \"HTTP:1935/\",\n          \"ELBConnectionDrainingTimeout\":       \"3600\",\n          \"ELBListenerCert2\":                   { \"Ref\": \"SSLCertId\" },\n          \"ELBListenerProtocol\":                \"TCP\",\n          \"ELBListenerPort\":                    \"1935\",\n          \"InstanceListenerProtocol\":           \"TCP\",\n          \"InstanceListenerPort\":               \"1935\",\n          \"ELBHealthyThreshold\":                \"2\",\n          \"ELBUnhealthyThreshold\":              \"2\",\n          \"ELBIntervalThreshold\":               \"30\",\n          \"ELBTimeoutThreshold\":                \"5\",\n\n          \"HighCPUThreshold\":                   \"75\",\n          \"HighCPUPeriod\":                      \"60\",\n          \"LowCPUThreshold\":                    \"40\",\n          \"LowCPUPeriod\":                       \"60\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.wowzaInstanceProfile\" ] },\n          \"InstanceSubnetAZ1\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] },\n          \"InstanceSubnetAZ2\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.wowzaSecurityGroupId\" ] },\n          \"PublicELBSubnetList\":                { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] } ]] },\n          \"PublicELBSecurityGroups\":            { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.wowzaElbSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" }\n        }\n      }\n    },\n\n\n    \"Ops\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ops_dual_elb.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"IsELBInternal\":                      \"True\",\n          \"UseELBCookieStickinessPolicy\":       \"False\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"Role\":                               \"ops\",\n          \"Environment\":                        { \"Ref\" : \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"ops\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"OpsAMI\" },\n          \"BootstrapFileName\":                  \"common_v2.sh\",\n          \"AssociatePublicIPAddress\":           \"False\",\n          \"RootEBSVolumeSize\":                  \"30\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"ops\", \"ASGHealthCheckType\" ] },\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"ops\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"ops\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"2\",\n          \"ScaleUpCooldown\":                    \"240\",\n          \"ScaleDownAdjustment\":                \"-2\",\n          \"ScaleDownCooldown\":                  \"180\",\n\n          \"HighCPUThreshold\":                   \"75\",\n          \"HighCPUPeriod\":                      \"60\",\n          \"LowCPUThreshold\":                    \"45\",\n          \"LowCPUPeriod\":                       \"60\",\n\n          \"HighPeriodCount\":                    { \"Fn::FindInMap\" : [ \"Params\", \"ops\", \"HighPeriodCount\" ] },\n          \"LowPeriodCount\":                     { \"Fn::FindInMap\" : [ \"Params\", \"ops\", \"LowPeriodCount\" ] },\n\n          \"RollingUpdateMinInstancesInService\": \"8\",\n          \"RollingUpdateMaxBatchSize\":          \"2\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"HealthCheckTarget\":                  \"HTTP:80/api/checkDBs.php\",\n          \"ELBConnectionDrainingTimeout\":       \"120\",\n          \"ELBListenerCert2\":                   { \"Ref\": \"SSLCertId\" },\n          \"ELBListenerProtocol\":                \"HTTP\",\n          \"ELBListenerPort\":                    \"80\",\n          \"ELBListenerProtocol2\":               \"HTTPS\",\n          \"ELBListenerPort2\":                   \"443\",\n          \"InstanceListenerProtocol\":           \"HTTP\",\n          \"InstanceListenerPort\":               \"80\",\n          \"InstanceListenerProtocol2\":          \"HTTP\",\n          \"InstanceListenerPort2\":              \"80\",\n          \"ELBHealthyThreshold\":                \"2\",\n          \"ELBUnhealthyThreshold\":              \"10\",\n          \"ELBIntervalThreshold\":               \"30\",\n          \"ELBTimeoutThreshold\":                \"15\",\n          \"High500sThreshold\":                  \"500\",\n          \"High500sPeriod\":                     \"60\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.opsInstanceProfile\" ] },\n          \"ELBSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] }] ] },\n          \"PublicELBSubnetList\":                { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz3Subnet\" ] } ]] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.opsSecurityGroupId\" ] },\n          \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.opsElbSecurityGroupId\" ] },\n          \"PublicELBSecurityGroups\":            { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.PublicOpsElbSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" },\n          \"HostedZoneName\":                     { \"Ref\": \"InternalHostedZone\" }\n        }\n      }\n    },\n\n    \"CleanSpeak\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"cleanspeak_dual_elb_asg.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"IsELBInternal\":                      \"True\",\n          \"UseELBCookieStickinessPolicy\":       \"True\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"Role\":                               \"cleanspeak\",\n          \"Environment\":                        { \"Ref\" : \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"cleanspeak\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"CleanSpeakAMI\" },\n          \"BootstrapFileName\":                  \"cleanspeak.sh\",\n          \"AssociatePublicIPAddress\":           \"False\",\n          \"RootEBSVolumeSize\":                  \"20\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"cleanspeak\", \"ASGHealthCheckType\" ] },\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"cleanspeak\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"cleanspeak\", \"MinInstancesCount\" ] },\n\n          \"HighCPUThreshold\":                   \"200\",\n          \"HighCPUPeriod\":                      \"60\",\n          \"LowCPUThreshold\":                    \"1\",\n          \"LowCPUPeriod\":                       \"60\",\n\n          \"RollingUpdateMinInstancesInService\": \"2\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M90S\",\n\n          \"HealthCheckTarget\":                  \"HTTP:8001/test\",\n          \"ELBConnectionDrainingTimeout\":       \"120\",\n          \"ELBListenerProtocol\":                \"HTTP\",\n          \"ELBListenerPort\":                    \"8001\",\n          \"ELBListenerProtocol2\":\t\t\"HTTP\",\n          \"ELBListenerPort2\":\t\t\t\"8080\",\n          \"InstanceListenerProtocol\":           \"HTTP\",\n          \"InstanceListenerPort\":               \"8001\",\n          \"InstanceListenerProtocol2\":\t\t\"HTTP\",\n          \"InstanceListenerPort2\":\t\t\"8080\",\n          \"ELBListenerCert\":                    \"\",\n          \"ELBHealthyThreshold\":                \"3\",\n          \"ELBUnhealthyThreshold\":              \"3\",\n          \"ELBIntervalThreshold\":               \"30\",\n          \"ELBTimeoutThreshold\":                \"5\",\n          \"High500sThreshold\":                  \"500\",\n          \"High500sPeriod\":                     \"60\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.cleanspeakInstanceProfile\" ] },\n          \"PrivateSubnetList\":                 { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] }] ] },\n          \"PublicSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] } ]] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.cleanspeakSecurityGroupId\" ] },\n          \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.cleanspeakElbSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" },\n          \"HostedZoneName\":                     { \"Ref\": \"InternalHostedZone\" }\n        }\n      }\n    },\n\n    \"McuRest\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"mcu_rest_public.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"IsELBInternal\":                      \"False\",\n          \"UseELBCookieStickinessPolicy\":       \"False\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"Role\":                               \"mcurest\",\n          \"Environment\":                        { \"Ref\" : \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"mcurest\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"McuRestAMI\" },\n          \"BootstrapFileName\":                  \"mcu_rest_public.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"100\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"mcurest\", \"ASGHealthCheckType\" ] },\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"mcurest\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"mcurest\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"60\",\n          \"HighCPUPeriod\":                      \"300\",\n          \"LowCPUThreshold\":                    \"35\",\n          \"LowCPUPeriod\":                       \"300\",\n\n          \"HighPeriodCount\":                    { \"Fn::FindInMap\" : [ \"Params\", \"mcurest\", \"HighPeriodCount\" ] },\n          \"LowPeriodCount\":                     { \"Fn::FindInMap\" : [ \"Params\", \"mcurest\", \"LowPeriodCount\" ] },\n\n          \"RollingUpdateMinInstancesInService\": { \"Fn::FindInMap\" : [ \"Params\", \"mcurest\", \"MinInstancesCount\" ] },\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M120S\",\n\n          \"HealthCheckTarget\":                  \"HTTP:9002/api/ping\",\n          \"ELBConnectionDrainingTimeout\":       \"120\",\n          \"ELBListenerProtocol\":                \"HTTP\",\n          \"ELBListenerPort\":                    \"5432\",\n          \"InstanceListenerProtocol\":           \"HTTP\",\n          \"InstanceListenerPort\":               \"9002\",\n          \"ELBListenerCert\":                    \"\",\n          \"ELBHealthyThreshold\":                \"2\",\n          \"ELBUnhealthyThreshold\":              \"6\",\n          \"ELBIntervalThreshold\":               \"12\",\n          \"ELBTimeoutThreshold\":                \"10\",\n          \"High500sThreshold\":                  \"500\",\n          \"High500sPeriod\":                     \"60\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.mcurestInstanceProfile\" ] },\n          \"InstanceSubnetList\":                 { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] }] ] },\n          \"ELBSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] } ]] },\n          \"PublicELBSubnetList\":                { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] } ]] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.mcurestSecurityGroupId\" ] },\n          \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.mcurestElbSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" },\n          \"HostedZoneName\":                     { \"Ref\": \"PublicHostedZone\" }\n        }\n      }\n    },\n\n    \"McuRestVIP\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"mcu_rest_public.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"IsELBInternal\":                      \"False\",\n          \"UseELBCookieStickinessPolicy\":       \"False\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"Role\":                               \"mcurestvip\",\n          \"Environment\":                        { \"Ref\" : \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"mcurestvip\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"McuRestVIPAMI\" },\n          \"BootstrapFileName\":                  \"mcu_rest_public.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"100\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"mcurestvip\", \"ASGHealthCheckType\" ] },\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"mcurestvip\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"mcurestvip\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"60\",\n          \"HighCPUPeriod\":                      \"300\",\n          \"LowCPUThreshold\":                    \"35\",\n          \"LowCPUPeriod\":                       \"300\",\n\n          \"HighPeriodCount\":                    { \"Fn::FindInMap\" : [ \"Params\", \"mcurestvip\", \"HighPeriodCount\" ] },\n          \"LowPeriodCount\":                     { \"Fn::FindInMap\" : [ \"Params\", \"mcurestvip\", \"LowPeriodCount\" ] },\n\n          \"RollingUpdateMinInstancesInService\": { \"Fn::FindInMap\" : [ \"Params\", \"mcurestvip\", \"MinInstancesCount\" ] },\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M120S\",\n\n          \"HealthCheckTarget\":                  \"HTTP:9002/api/ping\",\n          \"ELBConnectionDrainingTimeout\":       \"120\",\n          \"ELBListenerProtocol\":                \"HTTP\",\n          \"ELBListenerPort\":                    \"5432\",\n          \"InstanceListenerProtocol\":           \"HTTP\",\n          \"InstanceListenerPort\":               \"9002\",\n          \"ELBListenerCert\":                    \"\",\n          \"ELBHealthyThreshold\":                \"2\",\n          \"ELBUnhealthyThreshold\":              \"6\",\n          \"ELBIntervalThreshold\":               \"12\",\n          \"ELBTimeoutThreshold\":                \"10\",\n          \"High500sThreshold\":                  \"500\",\n          \"High500sPeriod\":                     \"60\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.mcurestInstanceProfile\" ] },\n          \"InstanceSubnetList\":                 { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] }] ] },\n          \"ELBSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] } ]] },\n          \"PublicELBSubnetList\":                { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] } ]] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.mcurestSecurityGroupId\" ] },\n          \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.mcurestElbSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" },\n          \"HostedZoneName\":                     { \"Ref\": \"PublicHostedZone\" }\n        }\n      }\n    },\n\n    \"McuRestSpecial\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"mcu_rest_public.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"IsELBInternal\":                      \"False\",\n          \"UseELBCookieStickinessPolicy\":       \"False\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"Role\":                               \"mcurestspecial\",\n          \"Environment\":                        { \"Ref\" : \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"mcurestspecial\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"McuRestSpecialAMI\" },\n          \"BootstrapFileName\":                  \"mcu_rest_public.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"100\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"mcurestspecial\", \"ASGHealthCheckType\" ] },\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"mcurestspecial\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"mcurestspecial\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"60\",\n          \"HighCPUPeriod\":                      \"300\",\n          \"LowCPUThreshold\":                    \"35\",\n          \"LowCPUPeriod\":                       \"300\",\n\n          \"HighPeriodCount\":                    { \"Fn::FindInMap\" : [ \"Params\", \"mcurestspecial\", \"HighPeriodCount\" ] },\n          \"LowPeriodCount\":                     { \"Fn::FindInMap\" : [ \"Params\", \"mcurestspecial\", \"LowPeriodCount\" ] },\n\n          \"RollingUpdateMinInstancesInService\": { \"Fn::FindInMap\" : [ \"Params\", \"mcurestspecial\", \"MinInstancesCount\" ] },\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M120S\",\n\n          \"HealthCheckTarget\":                  \"HTTP:9002/api/ping\",\n          \"ELBConnectionDrainingTimeout\":       \"120\",\n          \"ELBListenerProtocol\":                \"HTTP\",\n          \"ELBListenerPort\":                    \"5432\",\n          \"InstanceListenerProtocol\":           \"HTTP\",\n          \"InstanceListenerPort\":               \"9002\",\n          \"ELBListenerCert\":                    \"\",\n          \"ELBHealthyThreshold\":                \"2\",\n          \"ELBUnhealthyThreshold\":              \"6\",\n          \"ELBIntervalThreshold\":               \"12\",\n          \"ELBTimeoutThreshold\":                \"10\",\n          \"High500sThreshold\":                  \"500\",\n          \"High500sPeriod\":                     \"60\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.mcurestInstanceProfile\" ] },\n          \"InstanceSubnetList\":                 { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] }] ] },\n          \"ELBSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] } ]] },\n          \"PublicELBSubnetList\":                { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] } ]] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.mcurestSecurityGroupId\" ] },\n          \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.mcurestElbSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" },\n          \"HostedZoneName\":                     { \"Ref\": \"PublicHostedZone\" }\n        }\n      }\n    },\n\n    \"Fluentd\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"amzn_linux_asg_and_elb_dns_no_scaling.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"IsELBInternal\":                      \"True\",\n          \"UseELBCookieStickinessPolicy\":       \"False\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"Role\":                               \"fluentd\",\n          \"Environment\":                        { \"Ref\" : \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"fluentd\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"FluentdAMI\" },\n          \"BootstrapFileName\":                  \"fluentd.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"500\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"fluentd\", \"ASGHealthCheckType\" ] },\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"fluentd\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"fluentd\", \"MinInstancesCount\" ] },\n\n          \"HighCPUThreshold\":                   \"200\",\n          \"HighCPUPeriod\":                      \"60\",\n          \"LowCPUThreshold\":                    \"35\",\n          \"LowCPUPeriod\":                       \"60\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"HealthCheckTarget\":                  \"HTTP:24220/api/plugins.json\",\n          \"ELBConnectionDrainingTimeout\":       \"120\",\n          \"ELBListenerProtocol\":                \"HTTP\",\n          \"ELBListenerPort\":                    \"80\",\n          \"ELBListenerProtocol2\":               \"HTTPS\",\n          \"ELBListenerPort2\":                   \"443\",\n          \"InstanceListenerProtocol\":           \"HTTP\",\n          \"InstanceListenerPort\":               \"80\",\n          \"InstanceListenerProtocol2\":          \"HTTP\",\n          \"InstanceListenerPort2\":              \"80\",\n          \"ELBListenerCert2\":                   { \"Ref\": \"SSLCertId\" },\n          \"ELBHealthyThreshold\":                \"2\",\n          \"ELBUnhealthyThreshold\":              \"5\",\n          \"ELBIntervalThreshold\":               \"30\",\n          \"ELBTimeoutThreshold\":                \"10\",\n          \"High500sThreshold\":                  \"500\",\n          \"High500sPeriod\":                     \"60\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.fluentdInstanceProfile\" ] },\n          \"InstanceSubnetList\":                 { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz3Subnet\" ] }] ] },\n          \"ELBSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz3Subnet\" ] } ]] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.fluentdSecurityGroupId\" ] },\n          \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.fluentdElbSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" },\n          \"HostedZoneName\":                     { \"Ref\": \"InternalHostedZone\" }\n        }\n      }\n    },\n\n    \"FluentdPHP\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"amzn_linux_asg_and_elb_dns_no_scaling.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"IsELBInternal\":                      \"True\",\n          \"UseELBCookieStickinessPolicy\":       \"False\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"Role\":                               \"fluentdphp\",\n          \"Environment\":                        { \"Ref\" : \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"fluentdphp\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"FluentdAMI\" },\n          \"BootstrapFileName\":                  \"fluentd_php.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"500\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"fluentdphp\", \"ASGHealthCheckType\" ] },\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"fluentdphp\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"fluentdphp\", \"MinInstancesCount\" ] },\n\n          \"HighCPUThreshold\":                   \"200\",\n          \"HighCPUPeriod\":                      \"60\",\n          \"LowCPUThreshold\":                    \"35\",\n          \"LowCPUPeriod\":                       \"60\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"HealthCheckTarget\":                  \"HTTP:24220/api/plugins.json\",\n          \"ELBConnectionDrainingTimeout\":       \"120\",\n          \"ELBListenerProtocol\":                \"HTTP\",\n          \"ELBListenerPort\":                    \"80\",\n          \"ELBListenerProtocol2\":               \"HTTPS\",\n          \"ELBListenerPort2\":                   \"443\",\n          \"InstanceListenerProtocol\":           \"HTTP\",\n          \"InstanceListenerPort\":               \"80\",\n          \"InstanceListenerProtocol2\":          \"HTTP\",\n          \"InstanceListenerPort2\":              \"80\",\n          \"ELBListenerCert2\":                   { \"Ref\": \"SSLCertId\" },\n          \"ELBHealthyThreshold\":                \"2\",\n          \"ELBUnhealthyThreshold\":              \"5\",\n          \"ELBIntervalThreshold\":               \"30\",\n          \"ELBTimeoutThreshold\":                \"10\",\n          \"High500sThreshold\":                  \"500\",\n          \"High500sPeriod\":                     \"60\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.fluentdInstanceProfile\" ] },\n          \"InstanceSubnetList\":                 { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz3Subnet\" ] }] ] },\n          \"ELBSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz3Subnet\" ] } ]] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.fluentdSecurityGroupId\" ] },\n          \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.fluentdElbSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" },\n          \"HostedZoneName\":                     { \"Ref\": \"InternalHostedZone\" }\n        }\n      }\n    },\n\n    \"Track\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"amzn_linux_asg_and_elb_dns_elb_public.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"IsELBInternal\":                      \"False\",\n          \"UseELBCookieStickinessPolicy\":       \"False\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"Role\":                               \"track\",\n          \"Environment\":                        { \"Ref\" : \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"track\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"TrackAMI\" },\n          \"BootstrapFileName\":                  \"common_v2.sh\",\n          \"AssociatePublicIPAddress\":           \"False\",\n          \"RootEBSVolumeSize\":                  \"30\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"track\", \"ASGHealthCheckType\" ] },\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"track\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"track\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"85\",\n          \"HighCPUPeriod\":                      \"300\",\n          \"LowCPUThreshold\":                    \"40\",\n          \"LowCPUPeriod\":                       \"60\",\n\n          \"HighPeriodCount\":                    { \"Fn::FindInMap\" : [ \"Params\", \"track\", \"HighPeriodCount\" ] },\n          \"LowPeriodCount\":                     { \"Fn::FindInMap\" : [ \"Params\", \"track\", \"LowPeriodCount\" ] },\n\n          \"RollingUpdateMinInstancesInService\": \"2\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M90S\",\n\n          \"HealthCheckTarget\":                  \"HTTP:80/crossdomain.xml\",\n          \"ELBConnectionDrainingTimeout\":       \"120\",\n          \"ELBListenerProtocol\":                \"HTTP\",\n          \"ELBListenerPort\":                    \"80\",\n          \"ELBListenerProtocol2\":               \"HTTPS\",\n          \"ELBListenerPort2\":                   \"443\",\n          \"InstanceListenerProtocol\":           \"HTTP\",\n          \"InstanceListenerPort\":               \"80\",\n          \"InstanceListenerProtocol2\":          \"HTTP\",\n          \"InstanceListenerPort2\":              \"80\",\n          \"ELBListenerCert2\":                   { \"Ref\": \"SSLCertId\" },\n          \"ELBHealthyThreshold\":                \"2\",\n          \"ELBUnhealthyThreshold\":              \"8\",\n          \"ELBIntervalThreshold\":               \"30\",\n          \"ELBTimeoutThreshold\":                \"15\",\n          \"High500sThreshold\":                  \"500\",\n          \"High500sPeriod\":                     \"60\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.trackInstanceProfile\" ] },\n          \"InstanceSubnetList\":                 { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] }] ] },\n          \"ELBSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] } ]] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.trackSecurityGroupId\" ] },\n          \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.trackElbSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" },\n          \"HostedZoneName\":                     { \"Ref\": \"InternalHostedZone\" }\n        }\n      }\n    },\n\n    \"Admin\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"amzn_linux_asg_and_elb_dns_no_scaling_public.json\" ] ] },\n        \"Parameters\": {\n          \"IsELBInternal\":                      \"False\",\n          \"UseELBCookieStickinessPolicy\":       \"False\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"Role\":                               \"admin\",\n          \"Environment\":                        { \"Ref\" : \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"admin\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"AdminAMI\" },\n          \"BootstrapFileName\":                  \"common_v2.sh\",\n          \"AssociatePublicIPAddress\":           \"False\",\n          \"RootEBSVolumeSize\":                  \"30\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"admin\", \"ASGHealthCheckType\" ] },\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"admin\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"admin\", \"MinInstancesCount\" ] },\n\n          \"HighCPUThreshold\":                   \"200\",\n          \"HighCPUPeriod\":                      \"300\",\n          \"LowCPUThreshold\":                    \"40\",\n          \"LowCPUPeriod\":                       \"300\",\n\n          \"IdleTimeoutValue\":                   \"1200\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"HealthCheckTarget\":                  \"HTTP:80/crossdomain.xml\",\n          \"ELBConnectionDrainingTimeout\":       \"120\",\n          \"ELBListenerProtocol\":                \"HTTP\",\n          \"ELBListenerPort\":                    \"80\",\n          \"ELBListenerProtocol2\":               \"HTTPS\",\n          \"ELBListenerPort2\":                   \"443\",\n          \"InstanceListenerProtocol\":           \"HTTP\",\n          \"InstanceListenerPort\":               \"80\",\n          \"InstanceListenerProtocol2\":          \"HTTP\",\n          \"InstanceListenerPort2\":              \"80\",\n          \"ELBListenerCert2\":                   { \"Ref\": \"SSLCertId\" },\n          \"ELBHealthyThreshold\":                \"2\",\n          \"ELBUnhealthyThreshold\":              \"10\",\n          \"ELBIntervalThreshold\":               \"30\",\n          \"ELBTimeoutThreshold\":                \"15\",\n          \"High500sThreshold\":                  \"500\",\n          \"High500sPeriod\":                     \"60\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.adminInstanceProfile\" ] },\n          \"InstanceSubnetListPrivate\":          { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] }] ] },\n          \"InstanceSubnetListPublic\":           { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] } ]] },\n          \"ELBSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] } ]] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.adminSecurityGroupId\" ] },\n          \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.adminElbSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" },\n          \"HostedZoneName\":                     { \"Ref\": \"InternalHostedZone\" }\n        }\n      }\n    },\n\n    \"BlogTv\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"blogtv.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"IsELBInternal\":                      \"False\",\n          \"UseELBCookieStickinessPolicy\":       \"False\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"Role\":                               \"blogtv\",\n          \"Environment\":                        { \"Ref\" : \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"blogtv\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"BlogTvAMI\" },\n          \"BootstrapFileName\":                  { \"Ref\" : \"CommonBootstrapFile\" },\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"30\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"blogtv\", \"ASGHealthCheckType\" ] },\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"blogtv\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"blogtv\", \"MinInstancesCount\" ] },\n\n          \"HighCPUThreshold\":                   \"200\",\n          \"HighCPUPeriod\":                      \"300\",\n          \"LowCPUThreshold\":                    \"40\",\n          \"LowCPUPeriod\":                       \"300\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M90S\",\n\n          \"HealthCheckTarget\":                  \"HTTP:80/index.php\",\n          \"ELBConnectionDrainingTimeout\":       \"120\",\n          \"ELBListenerProtocol\":                \"HTTP\",\n          \"ELBListenerPort\":                    \"80\",\n          \"ELBListenerProtocol2\":               \"HTTPS\",\n          \"ELBListenerPort2\":                   \"443\",\n          \"InstanceListenerProtocol\":           \"HTTP\",\n          \"InstanceListenerPort\":               \"80\",\n          \"InstanceListenerProtocol2\":          \"HTTP\",\n          \"InstanceListenerPort2\":              \"80\",\n          \"ELBListenerCert2\":                   { \"Ref\": \"SSLCertId\" },\n          \"ELBHealthyThreshold\":                \"2\",\n          \"ELBUnhealthyThreshold\":              \"2\",\n          \"ELBIntervalThreshold\":               \"12\",\n          \"ELBTimeoutThreshold\":                \"5\",\n          \"High500sThreshold\":                  \"500\",\n          \"High500sPeriod\":                     \"60\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.blogtvInstanceProfile\" ] },\n          \"InstanceSubnetList\":                 { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz3Subnet\" ] }] ] },\n          \"ELBSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz3Subnet\" ] } ]] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.blogtvSecurityGroupId\" ] },\n          \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.blogtvElbSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" },\n          \"HostedZoneName\":                     { \"Ref\": \"PublicHostedZone\" }\n        }\n      }\n    },\n\n    \"Prerender\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"prerender_public_private_asg_public_elb_dns.json\" ] ] },\n        \"Parameters\": {\n          \"IsELBInternal\":                      \"False\",\n          \"UseELBCookieStickinessPolicy\":       \"False\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"Role\":                               \"prerender\",\n          \"Environment\":                        { \"Ref\" : \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"prerender\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"PrerenderAMI\" },\n          \"BootstrapFileName\":                  \"prerender.sh\",\n          \"AssociatePublicIPAddress\":           \"False\",\n          \"RootEBSVolumeSize\":                  \"12\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"prerender\", \"ASGHealthCheckType\" ] },\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"prerender\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"prerender\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"2\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-2\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"70\",\n          \"HighCPUPeriod\":                      \"60\",\n          \"LowCPUThreshold\":                    \"50\",\n          \"LowCPUPeriod\":                       \"60\",\n\n          \"HighPeriodCount\":                    { \"Fn::FindInMap\" : [ \"Params\", \"prerender\", \"HighPeriodCount\" ] },\n          \"LowPeriodCount\":                     { \"Fn::FindInMap\" : [ \"Params\", \"prerender\", \"LowPeriodCount\" ] },\n\n          \"IdleTimeoutValue\":                   \"20\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"HealthCheckTarget\":                  \"TCP:80\",\n          \"ELBConnectionDrainingTimeout\":       \"120\",\n          \"ELBListenerProtocol\":                \"HTTP\",\n          \"ELBListenerPort\":                    \"80\",\n          \"ELBListenerProtocol2\":               \"HTTPS\",\n          \"ELBListenerPort2\":                   \"443\",\n          \"InstanceListenerProtocol\":           \"HTTP\",\n          \"InstanceListenerPort\":               \"80\",\n          \"InstanceListenerProtocol2\":          \"HTTP\",\n          \"InstanceListenerPort2\":              \"80\",\n          \"ELBListenerCert2\":                   { \"Ref\": \"SSLCertId\" },\n          \"ELBHealthyThreshold\":                \"2\",\n          \"ELBUnhealthyThreshold\":              \"3\",\n          \"ELBIntervalThreshold\":               \"15\",\n          \"ELBTimeoutThreshold\":                \"3\",\n          \"High500sThreshold\":                  \"500\",\n          \"High500sPeriod\":                     \"60\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.prerenderInstanceProfile\" ] },\n          \"InstanceSubnetListPrivate\":          { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] }] ] },\n          \"InstanceSubnetListPublic\":           { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] } ]] },\n          \"ELBSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] } ]] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.prerenderSecurityGroupId\" ] },\n          \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.prerenderElbSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                            { \"Ref\": \"Project\" },\n          \"HostedZoneName\":                     { \"Ref\": \"PublicHostedZone\" }\n        }\n      }\n    },\n\n    \"McuPipeline\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"amzn_linux_asg_no_scaling_no_rolling.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"Role\":                               \"mcupipeline\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"mcupipeline\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"McuPipelineAMI\" },\n          \"BootstrapFileName\":                  \"mcu_pipe.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"100\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 \"EC2\",\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"mcupipeline\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"mcupipeline\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"75\",\n          \"HighCPUPeriod\":                      \"60\",\n          \"LowCPUThreshold\":                    \"40\",\n          \"LowCPUPeriod\":                       \"60\",\n\n          \"HighPeriodCount\":                    { \"Fn::FindInMap\" : [ \"Params\", \"mcupipeline\", \"HighPeriodCount\" ] },\n          \"LowPeriodCount\":                     { \"Fn::FindInMap\" : [ \"Params\", \"mcupipeline\", \"LowPeriodCount\" ] },\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.mcupipelineInstanceProfile\" ] },\n          \"InstanceSubnetAZ1\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] },\n          \"InstanceSubnetAZ2\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.mcupipelineSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" }\n        }\n      }\n    },\n\n    \"McuPipelineVIP\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"amzn_linux_asg_no_scaling_no_rolling.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"Role\":                               \"mcupipelinevip\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"mcupipelinevip\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"McuPipelineVIPAMI\" },\n          \"BootstrapFileName\":                  \"mcu_pipe.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"100\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 \"EC2\",\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"mcupipelinevip\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"mcupipelinevip\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"75\",\n          \"HighCPUPeriod\":                      \"60\",\n          \"LowCPUThreshold\":                    \"40\",\n          \"LowCPUPeriod\":                       \"60\",\n\n          \"HighPeriodCount\":                    { \"Fn::FindInMap\" : [ \"Params\", \"mcupipelinevip\", \"HighPeriodCount\" ] },\n          \"LowPeriodCount\":                     { \"Fn::FindInMap\" : [ \"Params\", \"mcupipelinevip\", \"LowPeriodCount\" ] },\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.mcupipelineInstanceProfile\" ] },\n          \"InstanceSubnetAZ1\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] },\n          \"InstanceSubnetAZ2\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.mcupipelineSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" }\n        }\n      }\n    },\n\n    \"McuPipelineSpecial\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"amzn_linux_asg_no_scaling_no_rolling.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"Role\":                               \"mcupipelinespecial\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"mcupipelinespecial\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"McuPipelineSpecialAMI\" },\n          \"BootstrapFileName\":                  \"mcu_pipe.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"100\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 \"EC2\",\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"mcupipelinespecial\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"mcupipelinespecial\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"75\",\n          \"HighCPUPeriod\":                      \"60\",\n          \"LowCPUThreshold\":                    \"40\",\n          \"LowCPUPeriod\":                       \"60\",\n\n          \"HighPeriodCount\":                    { \"Fn::FindInMap\" : [ \"Params\", \"mcupipelinespecial\", \"HighPeriodCount\" ] },\n          \"LowPeriodCount\":                     { \"Fn::FindInMap\" : [ \"Params\", \"mcupipelinespecial\", \"LowPeriodCount\" ] },\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.mcupipelineInstanceProfile\" ] },\n          \"InstanceSubnetAZ1\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] },\n          \"InstanceSubnetAZ2\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.mcupipelineSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" }\n        }\n      }\n    },\n\n\n    \"Tungsten\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"amzn_linux_asg_no_scaling.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"Role\":                               \"tungsten\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"tungsten\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"TungstenAMI\" },\n          \"BootstrapFileName\":                  \"tungsten.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"100\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 \"EC2\",\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"tungsten\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"tungsten\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"200\",\n          \"HighCPUPeriod\":                      \"300\",\n          \"LowCPUThreshold\":                    \"40\",\n          \"LowCPUPeriod\":                       \"300\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.tungstenInstanceProfile\" ] },\n          \"InstanceSubnetAZ1\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] },\n          \"InstanceSubnetAZ2\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] },\n          \"InstanceSubnetAZ3\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz3Subnet\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.tungstenSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" }\n        }\n      }\n    },\n\n    \"Deployer\": {\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"deployer_public_asg.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"Role\":                               \"deployer\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"deployer\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"DeployerAMI\" },\n          \"BootstrapFileName\":                  \"deployer.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"30\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 \"EC2\",\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"deployer\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"deployer\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"200\",\n          \"HighCPUPeriod\":                      \"300\",\n          \"LowCPUThreshold\":                    \"40\",\n          \"LowCPUPeriod\":                       \"300\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.deployerInstanceProfile\" ] },\n          \"InstanceSubnetAZ1\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] },\n          \"InstanceSubnetAZ2\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] },\n          \"InstanceSubnetAZ3\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz3Subnet\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.deployerSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" }\n        }\n      }\n    },\n\n    \"Ansible\": {\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"amzn_linux_asg_and_elb_dns_no_scaling_no_rolling.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"IsELBInternal\":                      \"False\",\n          \"UseELBCookieStickinessPolicy\":       \"False\",\n          \"ELBStickySessionLength\":             \"60\",\n          \"Role\":                               \"ansible\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"ansible\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"AnsibleAMI\" },\n          \"BootstrapFileName\":                  \"ansible.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"30\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 { \"Fn::FindInMap\" : [ \"Params\", \"ansible\", \"ASGHealthCheckType\" ] },\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"ansible\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"ansible\", \"MinInstancesCount\" ] },\n\n          \"HighCPUThreshold\":                   \"200\",\n          \"HighCPUPeriod\":                      \"300\",\n          \"LowCPUThreshold\":                    \"40\",\n          \"LowCPUPeriod\":                       \"300\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"HealthCheckTarget\":                  \"HTTP:3000/ansible\",\n          \"ELBConnectionDrainingTimeout\":       \"120\",\n          \"ELBListenerProtocol\":                \"HTTP\",\n          \"ELBListenerPort\":                    \"3000\",\n          \"InstanceListenerProtocol\":           \"HTTP\",\n          \"InstanceListenerPort\":               \"3000\",\n          \"ELBHealthyThreshold\":                \"2\",\n          \"ELBUnhealthyThreshold\":              \"5\",\n          \"ELBIntervalThreshold\":               \"30\",\n          \"ELBTimeoutThreshold\":                \"5\",\n          \"InstanceSubnetList\":                 { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz3Subnet\" ] }] ] },\n          \"ELBSubnetList\":                      { \"Fn::Join\" : [ \",\", [ { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] }, { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz3Subnet\" ] } ]] },\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.ansibleInstanceProfile\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ansibleSecurityGroupId\" ] },\n          \"ELBSecurityGroups\":                  { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ansibleElbSecurityGroupId\" ] },\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                            { \"Ref\": \"Project\" },\n          \"HostedZoneName\":                     { \"Ref\": \"PublicHostedZone\" }\n        }\n      }\n    },\n\n    \"McuMirror\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"amzn_linux_asg_no_scaling.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"Role\":                               \"mcumirror\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"mcumirror\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"McuMirrorAMI\" },\n          \"BootstrapFileName\":                  { \"Ref\" : \"CommonBootstrapFile\" },\n          \"AssociatePublicIPAddress\":           \"False\",\n          \"RootEBSVolumeSize\":                  \"25\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 \"EC2\",\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"mcumirror\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"mcumirror\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"200\",\n          \"HighCPUPeriod\":                      \"300\",\n          \"LowCPUThreshold\":                    \"40\",\n          \"LowCPUPeriod\":                       \"300\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.mcumirrorInstanceProfile\" ] },\n          \"InstanceSubnetAZ1\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz1Subnet\" ] },\n          \"InstanceSubnetAZ2\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz2Subnet\" ] },\n          \"InstanceSubnetAZ3\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PrivateAz3Subnet\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.mcumirrorSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" }\n        }\n      }\n    },\n\n    \"Neo4j\": {\n      \"DependsOn\":                              [ \"Ansible\", \"Deployer\" ],\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"amzn_linux_asg.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"Role\":                               \"neo4j\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"neo4j\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"Neo4jAMI\" },\n          \"BootstrapFileName\":                  \"neo4j.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"500\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 \"EC2\",\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"neo4j\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"neo4j\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"200\",\n          \"HighCPUPeriod\":                      \"300\",\n          \"LowCPUThreshold\":                    \"30\",\n          \"LowCPUPeriod\":                       \"300\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.neo4jInstanceProfile\" ] },\n          \"InstanceSubnetAZ1\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] },\n          \"InstanceSubnetAZ2\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] },\n          \"InstanceSubnetAZ3\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz3Subnet\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.neo4jSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" }\n        }\n      }\n    },\n\n    \"Data\": {\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"datasci_asg_no_scaling.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"Role\":                               \"data\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"data\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"DataAMI\" },\n          \"BootstrapFileName\":                  \"dataserver.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"500\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 \"EC2\",\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"data\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"data\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"200\",\n          \"HighCPUPeriod\":                      \"300\",\n          \"LowCPUThreshold\":                    \"30\",\n          \"LowCPUPeriod\":                       \"300\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M30S\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.dataInstanceProfile\" ] },\n          \"InstanceSubnetAZ1\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] },\n          \"InstanceSubnetAZ2\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] },\n          \"InstanceSubnetAZ3\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz3Subnet\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.dataSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" }\n        }\n      }\n    },\n\n    \"DataWorker\": {\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"dataworker_live.json\" ] ] },\n        \"Parameters\": {\n          \"IsMultiAZStack\":                     \"True\",\n          \"Role\":                               \"dataworker\",\n          \"Environment\":                        { \"Ref\": \"Environment\" },\n          \"InstanceType\":                       { \"Fn::FindInMap\" : [ \"Params\", \"dataworker\", \"InstanceType\" ] },\n          \"AMI\":                                { \"Ref\" : \"DataWorkerAMI\" },\n          \"BootstrapFileName\":                  \"dataworker.sh\",\n          \"AssociatePublicIPAddress\":           \"True\",\n          \"RootEBSVolumeSize\":                  \"500\",\n          \"EBSVolumeType\":                      \"gp2\",\n          \"DeleteEBSVolumesOnTermination\":      \"True\",\n\n          \"ASGHealthCheckType\":                 \"EC2\",\n          \"HealthCheckGracePeriod\":             \"300\",\n          \"MaxInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"dataworker\", \"MaxInstancesCount\" ] },\n          \"MinInstancesCount\":                  { \"Fn::FindInMap\" : [ \"Params\", \"dataworker\", \"MinInstancesCount\" ] },\n          \"ScaleUpAdjustment\":                  \"1\",\n          \"ScaleUpCooldown\":                    \"300\",\n          \"ScaleDownAdjustment\":                \"-1\",\n          \"ScaleDownCooldown\":                  \"300\",\n\n          \"HighCPUThreshold\":                   \"200\",\n          \"HighCPUPeriod\":                      \"300\",\n          \"LowCPUThreshold\":                    \"30\",\n          \"LowCPUPeriod\":                       \"300\",\n\n          \"RollingUpdateMinInstancesInService\": \"1\",\n          \"RollingUpdateMaxBatchSize\":          \"1\",\n          \"RollingUpdatePauseTime\":             \"PT0M90S\",\n\n          \"IAMInstanceProfile\":                 { \"Fn::GetAtt\" : [ \"IAM\", \"Outputs.dataInstanceProfile\" ] },\n          \"InstanceSubnetAZ1\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz1Subnet\" ] },\n          \"InstanceSubnetAZ2\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz2Subnet\" ] },\n          \"InstanceSubnetAZ3\":                  { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.PublicAz3Subnet\" ] },\n          \"InstanceSecurityGroups\":             { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.dataSecurityGroupId\" ] },\n\n          \"CloudWatchAlarmSNSTopic\":            { \"Fn::GetAtt\" : [ \"SNS\", \"Outputs.Primary\" ] },\n          \"EC2KeyPair\":                         { \"Fn::Join\": [ \"\", [ { \"Ref\" : \"CommonEC2Key\" }, { \"Ref\":\"AWS::Region\" } ] ] },\n          \"BootstrapS3BucketName\":              { \"Ref\": \"BootstrapBucket\" },\n          \"Project\":                        \t{ \"Ref\": \"Project\" }\n        }\n      }\n    },\n    \"Feed1\": {\n     \"Type\": \"AWS::CloudFormation::Stack\",\n     \"Properties\": {\n          \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n          \"Parameters\": {\n            \"Environment\":                        {\"Ref\":\"Environment\"},\n            \"Role\":                               \"feed1\",\n            \"Project\":                            {\"Ref\":\"Project\"},\n            \"NodeSize\":                           \"cache.r3.xlarge\",\n            \"ECacheEngine\":                       \"redis\",\n            \"EngineVersion\":                      \"2.8.22\",\n            \"NumberOfNodes\":                      \"1\",\n            \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n            \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n          }\n        }\n   },  \n   \"Feed2\": {\n    \"Type\": \"AWS::CloudFormation::Stack\",\n    \"Properties\": {\n         \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n         \"Parameters\": {\n           \"Environment\":                        {\"Ref\":\"Environment\"},\n           \"Role\":                               \"feed2\",\n           \"Project\":                            {\"Ref\":\"Project\"},\n           \"NodeSize\":                           \"cache.r3.xlarge\",\n           \"ECacheEngine\":                       \"redis\",\n           \"EngineVersion\":                      \"2.8.22\",\n           \"NumberOfNodes\":                      \"1\",\n           \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n           \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n         }\n       }\n  },\n  \"Feed3\": {\n   \"Type\": \"AWS::CloudFormation::Stack\",\n   \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n        \"Parameters\": {\n          \"Environment\":                        {\"Ref\":\"Environment\"},\n          \"Role\":                               \"feed3\",\n          \"Project\":                            {\"Ref\":\"Project\"},\n          \"NodeSize\":                           \"cache.r3.xlarge\",\n          \"ECacheEngine\":                       \"redis\",\n          \"EngineVersion\":                      \"2.8.22\",\n          \"NumberOfNodes\":                      \"1\",\n          \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n          \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n        }\n      }\n },\n \"Feed4\": {\n  \"Type\": \"AWS::CloudFormation::Stack\",\n  \"Properties\": {\n       \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n       \"Parameters\": {\n         \"Environment\":                        {\"Ref\":\"Environment\"},\n         \"Role\":                               \"feed4\",\n         \"Project\":                            {\"Ref\":\"Project\"},\n         \"NodeSize\":                           \"cache.r3.xlarge\",\n         \"ECacheEngine\":                       \"redis\",\n         \"EngineVersion\":                      \"2.8.22\",\n         \"NumberOfNodes\":                      \"1\",\n         \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n         \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n       }\n     }\n},\n\"Feed5\": {\n \"Type\": \"AWS::CloudFormation::Stack\",\n \"Properties\": {\n      \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n      \"Parameters\": {\n        \"Environment\":                        {\"Ref\":\"Environment\"},\n        \"Role\":                               \"feed5\",\n        \"Project\":                            {\"Ref\":\"Project\"},\n        \"NodeSize\":                           \"cache.r3.xlarge\",\n        \"ECacheEngine\":                       \"redis\",\n        \"EngineVersion\":                      \"2.8.22\",\n        \"NumberOfNodes\":                      \"1\",\n        \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n        \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n      }\n    }\n},\n\"Feed6\": {\n \"Type\": \"AWS::CloudFormation::Stack\",\n \"Properties\": {\n      \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n      \"Parameters\": {\n        \"Environment\":                        {\"Ref\":\"Environment\"},\n        \"Role\":                               \"feed6\",\n        \"Project\":                            {\"Ref\":\"Project\"},\n        \"NodeSize\":                           \"cache.r3.xlarge\",\n        \"ECacheEngine\":                       \"redis\",\n        \"EngineVersion\":                      \"2.8.22\",\n        \"NumberOfNodes\":                      \"1\",\n        \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n        \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n      }\n    }\n},\n\"Feed7\": {\n \"Type\": \"AWS::CloudFormation::Stack\",\n \"Properties\": {\n      \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n      \"Parameters\": {\n        \"Environment\":                        {\"Ref\":\"Environment\"},\n        \"Role\":                               \"feed7\",\n        \"Project\":                            {\"Ref\":\"Project\"},\n        \"NodeSize\":                           \"cache.r3.xlarge\",\n        \"ECacheEngine\":                       \"redis\",\n        \"EngineVersion\":                      \"2.8.22\",\n        \"NumberOfNodes\":                      \"1\",\n        \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n        \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n      }\n    }\n},\n\"Feed8\": {\n \"Type\": \"AWS::CloudFormation::Stack\",\n \"Properties\": {\n      \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n      \"Parameters\": {\n        \"Environment\":                        {\"Ref\":\"Environment\"},\n        \"Role\":                               \"feed8\",\n        \"Project\":                            {\"Ref\":\"Project\"},\n        \"NodeSize\":                           \"cache.r3.xlarge\",\n        \"ECacheEngine\":                       \"redis\",\n        \"EngineVersion\":                      \"2.8.22\",\n        \"NumberOfNodes\":                      \"1\",\n        \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n        \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n      }\n    }\n},\n\"Feed9\": {\n \"Type\": \"AWS::CloudFormation::Stack\",\n \"Properties\": {\n      \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n      \"Parameters\": {\n        \"Environment\":                        {\"Ref\":\"Environment\"},\n        \"Role\":                               \"feed9\",\n        \"Project\":                            {\"Ref\":\"Project\"},\n        \"NodeSize\":                           \"cache.r3.xlarge\",\n        \"ECacheEngine\":                       \"redis\",\n        \"EngineVersion\":                      \"2.8.22\",\n        \"NumberOfNodes\":                      \"1\",\n        \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n        \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n      }\n    }\n},\n\"Feed10\": {\n \"Type\": \"AWS::CloudFormation::Stack\",\n \"Properties\": {\n      \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n      \"Parameters\": {\n        \"Environment\":                        {\"Ref\":\"Environment\"},\n        \"Role\":                               \"feed10\",\n        \"Project\":                            {\"Ref\":\"Project\"},\n        \"NodeSize\":                           \"cache.r3.xlarge\",\n        \"ECacheEngine\":                       \"redis\",\n        \"EngineVersion\":                      \"2.8.22\",\n        \"NumberOfNodes\":                      \"1\",\n        \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n        \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n      }\n    }\n},\n\"Feed11\": {\n \"Type\": \"AWS::CloudFormation::Stack\",\n \"Properties\": {\n      \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n      \"Parameters\": {\n        \"Environment\":                        {\"Ref\":\"Environment\"},\n        \"Role\":                               \"feed11\",\n        \"Project\":                            {\"Ref\":\"Project\"},\n        \"NodeSize\":                           \"cache.r3.xlarge\",\n        \"ECacheEngine\":                       \"redis\",\n        \"EngineVersion\":                      \"2.8.22\",\n        \"NumberOfNodes\":                      \"1\",\n        \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n        \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n      }\n    }\n},\n\"Feed12\": {\n \"Type\": \"AWS::CloudFormation::Stack\",\n \"Properties\": {\n      \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n      \"Parameters\": {\n        \"Environment\":                        {\"Ref\":\"Environment\"},\n        \"Role\":                               \"feed12\",\n        \"Project\":                            {\"Ref\":\"Project\"},\n        \"NodeSize\":                           \"cache.r3.xlarge\",\n        \"ECacheEngine\":                       \"redis\",\n        \"EngineVersion\":                      \"2.8.22\",\n        \"NumberOfNodes\":                      \"1\",\n        \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n        \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n      }\n    }\n},\n\"Feed13\": {\n \"Type\": \"AWS::CloudFormation::Stack\",\n \"Properties\": {\n      \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n      \"Parameters\": {\n        \"Environment\":                        {\"Ref\":\"Environment\"},\n        \"Role\":                               \"feed13\",\n        \"Project\":                            {\"Ref\":\"Project\"},\n        \"NodeSize\":                           \"cache.r3.xlarge\",\n        \"ECacheEngine\":                       \"redis\",\n        \"EngineVersion\":                      \"2.8.22\",\n        \"NumberOfNodes\":                      \"1\",\n        \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n        \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n      }\n    }\n},\n\"Feed14\": {\n \"Type\": \"AWS::CloudFormation::Stack\",\n \"Properties\": {\n      \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n      \"Parameters\": {\n        \"Environment\":                        {\"Ref\":\"Environment\"},\n        \"Role\":                               \"feed14\",\n        \"Project\":                            {\"Ref\":\"Project\"},\n        \"NodeSize\":                           \"cache.r3.xlarge\",\n        \"ECacheEngine\":                       \"redis\",\n        \"EngineVersion\":                      \"2.8.22\",\n        \"NumberOfNodes\":                      \"1\",\n        \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n        \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n      }\n    }\n},\n\"Feed15\": {\n \"Type\": \"AWS::CloudFormation::Stack\",\n \"Properties\": {\n      \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n      \"Parameters\": {\n        \"Environment\":                        {\"Ref\":\"Environment\"},\n        \"Role\":                               \"feed15\",\n        \"Project\":                            {\"Ref\":\"Project\"},\n        \"NodeSize\":                           \"cache.r3.xlarge\",\n        \"ECacheEngine\":                       \"redis\",\n        \"EngineVersion\":                      \"2.8.22\",\n        \"NumberOfNodes\":                      \"1\",\n        \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n        \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n      }\n    }\n},\n\"Feed16\": {\n \"Type\": \"AWS::CloudFormation::Stack\",\n \"Properties\": {\n      \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"ElastiCache.json\" ] ] }, \n      \"Parameters\": {\n        \"Environment\":                        {\"Ref\":\"Environment\"},\n        \"Role\":                               \"feed16\",\n        \"Project\":                            {\"Ref\":\"Project\"},\n        \"NodeSize\":                           \"cache.r3.xlarge\",\n        \"ECacheEngine\":                       \"redis\",\n        \"EngineVersion\":                      \"2.8.22\",\n        \"NumberOfNodes\":                      \"1\",\n        \"ElastiCacheSubnetGroup\":             { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.ElastiCacheSubnetGroup\" ] },\n        \"ElastiCacheSecurityGroup\":           { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.ECacheSecurityGroupId\" ] }\n      }\n    }\n},                                       \n    \"RDS\": {\n      \"Type\": \"AWS::CloudFormation::Stack\",\n      \"Properties\": {\n        \"TemplateURL\":                          { \"Fn::Join\": [ \"\", [ \"https://s3.amazonaws.com/\", { \"Ref\" : \"CloudFormationBucket\" }, \"/\", \"SingleRDS.json\" ]] },\n        \"Parameters\": {\n          \"RDSSubnetGroup\": { \"Fn::GetAtt\" : [ \"Network\", \"Outputs.RDSSubnetGroup\" ] },\n          \"DBUser\": \"root\",\n          \"DBPassword\": \"ThiswontChange\",\n          \"DBName\": \"bnow\",\n          \"DBSecurityGroup\": { \"Fn::GetAtt\" : [ \"SecurityGroups\", \"Outputs.RdsSecurityGroupId\" ] },\n          \"DBSnapshotID\": { \"Ref\": \"RDSSnapShotID\" },\n          \"DBSize\": \"400\",\n          \"IOPS\": \"4000\",\n          \"RDSType\": \"db.m3.2xlarge\",\n          \"BackUpRetention\": \"7\",\n          \"DBEngine\": \"mysql\",\n          \"EngineVersion\": \"5.6.23\",\n          \"AppName\": { \"Fn::Join\": [ \"\", [ { \"Ref\": \"Project\" } ] ] },\n          \"Environment\": { \"Ref\": \"Environment\" },\n          \"Project\": { \"Ref\": \"Project\" },\n          \"MultiAz\": \"True\",\n          \"DBParameterGroup\": \"productdb5-6\"\n        }\n      }\n    }\n\n\n  },\n\n  \"Outputs\" : {\n  }\n\n}\n","diskText":"dab80a74b2d9e66bfc618afeb45c2c60","path":"/Users/Mo/git/aws-tools/cloudformation/US-Live-Top.json"},{"path":"/Users/Mo/git/aws-tools/bootstrap/mcu_pipe.sh"},{"path":"/Users/Mo/git/aws-tools/bootstrap/mcu_rest.sh"},{"path":"/Users/Mo/git/aws-tools/cloudformation/amzn_linux_asg_elb_dns_100_scaleup_public.json"},{"path":"/Users/Mo/git/aws-tools/cloudformation/ops_dual_elb.json"},{"path":"/Users/Mo/git/aws-tools/cloudformation/amzn_linux_asg_and_elb_dns_elb_public.json"},{"path":"/Users/Mo/git/aws-tools/cloudformation/Live-params.json"},{"text":"\n#!/usr/bin/env bash\n\n## The following variables are exported via UserData:\n## $PROJECT\n## $ROLE\n## $ENV\n## $SNS_TOPIC\n\n## Variables are re-exported here to ensure lowercase.\nexport PROJECT=${PROJECT,,}\nexport ROLE=${ROLE,,}\nexport ENV=${ENV,,}\n\n## These variables should rarely change.\nLOG=/var/log/boot.log\nID=$(curl -q http://169.254.169.254/latest/meta-data/instance-id)\nHOSTNAME=${PROJECT}-${ENV}-${ROLE}-${ID}\nREGION=$(curl -q http://169.254.169.254/latest/dynamic/instance-identity/document | grep region | awk -F\\\" '{print $4}')\n\n{\n## Set hostname\nhostname $HOSTNAME\necho \"New hostname is $(hostname).\"\n\n## Configure AWS CLI\naws configure set default.region $REGION\naws configure set default.s3.signature_version s3v4\n\nif [ \"$ENV\" == \"live\" ]\nthen\nperl /var/monitors/startup-vpc.pl --get master live\ncat >/var/spool/cron/apache<<CA_PROD\n* * * * *       php /var/www/www.bnow.tv/cron/processLocalJobQueue.php\n15 2 * * *\t\tphp /var/www/www.bnow.tv/cron/doCleanup.php\n*/5 * * * *\t\tphp /var/www/www.bnow.tv/cron/updateWowzaServerFileBackLogMetric.php\n* * * * *\t\tphp /var/www/www.bnow.tv/cron/clearSuspendedUsers.php\n12 * * * *\t\tphp /var/www/www.bnow.tv/cron/doCleanupHourly.php\n9 * * * *\t\tphp /var/www/www.bnow.tv/cron/tracker/trackerTester.php\n* * * * *\t\tphp /var/www/www.bnow.tv/cron/scaling/spikeDetector.php\n*/5 * * * *\t\tphp /var/www/www.bnow.tv/cron/cleanSessions.php\n* * * * *\t\tphp /var/www/www.bnow.tv/cron/recalcYounowTags.php\n*/5 * * * *\t\tphp /var/www/www.bnow.tv/cron/moveUsersToRedshift.php\n15 1 * * *\t\tphp /var/www/www.bnow.tv/cron/moveUserVaultSnapshot.php\n*/5 * * * *\t\tphp /var/www/www.bnow.tv/cron/cancelPendingGoodieTrans.php\n0 * * * *       php /var/www/www.bnow.tv/cron/updateUninstalledDevices.php --period 1 --sleepBetweenBulks 10000\n25 0 * * *\t\tphp /var/www/www.bnow.tv/cron/calcBroadcasterRetentionScore.php\n*/15 * * * *    php /var/www/www.bnow.tv/cron/monitorPeopleSearch.php\n0 6 * * *       php /var/www/www.bnow.tv/cron/cleanupPeopleSearch.php\n0 3 15 * *      php /var/www/www.bnow.tv/cron/populateSearch.php\n0 7 * * *       php /var/www/www.bnow.tv/cron/cleanupRiskyUsers.php\n0 0 1 * *       php /var/www/www.bnow.tv/cron/cleanUpInactiveUsers.php\n*/5 * * * *     php /var/www/www.bnow.tv/cron/updateChatLogsTable.php\n* * * * *       php /var/www/www.bnow.tv/cron/updateConcurrentBroadcastersMetric.php\n30 * * * *      php /var/www/www.bnow.tv/cron/updatePushNotificationsMetrics.php\n0 5 * * *       php /var/www/www.bnow.tv/cron/cleanupBroadcasts.php\n30 5 * * *      php /var/www/www.bnow.tv/cron/calcActiveVIPUsers.php\n0 3 * * *       php /var/www/www.bnow.tv/cron/gcRedisKeys.php\n30 3 * * *      php /var/www/www.bnow.tv/cron/optimizeRedshift.php\n25 0 * * *      php /var/www/www.bnow.tv/cron/copyFanshipToRedshift.php\n0 0 * * *       php /var/www/www.bnow.tv/cron/copySubscribersToRedshift.php\n0 1 * * *       php /var/www/www.bnow.tv/cron/monitorSubscriptions.php\n\n30 7 * * *\tphp /var/www/www.bnow.tv/cron/setAllLocalesSpenders.php --doit 1 --period 30\n0 4 * * *      php /var/www/www.bnow.tv/cron/syncBroadcastsToSalesforce.php --doit 1\n\n# run preservation request every 2 min\n# ---------------------------------------\n*/2 * * * *     php /var/monitors/preservation_request.php 2>/dev/null >/dev/null\n\n# search engine optimization static crons\n# ---------------------------------------\n# prerender - registered user (every 5 min)\n*/5 * * * *\t\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php registered --prerender --minutes=10  2>/dev/null >/dev/null\n\n# prerender - tags (daily)\n0 0 * * *\t\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php tags --prerender 2>/dev/null >/dev/null\n\n# prerender - users modified their profile with user level >= 50, in respect to events (daily)\n0 0 * * 1-6\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php events --prerender --minutes=1440 --min-user-level=50 2>/dev/null >/dev/null\n\n# prerender - all users modified their profile, in respect to events (weekly)\n0 0 * * 0\t\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php events --prerender --minutes=10080 --min-user-level=0 2>/dev/null >/dev/null\n\n# prerender - static pages (weekly)\n0 0 * * 0\t\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php sites --prerender 2>/dev/null >/dev/null\n\n# sitemap - static pages (daily)\n0 0 * * *\t\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php sites --sitemap 2>/dev/null >/dev/null\n\n# sitemap - tags (daily)\n15 0 * * *\t\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php tags --sitemap 2>/dev/null >/dev/null\n\n# sitemap - all users (daily)\n30 0 * * *\t\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php users --sitemap 2>/dev/null >/dev/null\n\n# Estimated Earnings for Partners \n# ---------------------------------------\n0 4 * * *       php /var/www/www.bnow.tv/cron/calcRecentSupporters.php --doit 1\n0 4 * * *       php /var/www/www.bnow.tv/cron/cleanUpRecentPosts.php --doit 1\n\n*/5 * * * *     php /var/www/www.bnow.tv/cron/updateCronCount.php > /dev/null\n\n\nCA_END\n=======\n\n* * * * *       curl -f --silent -o /dev/null --max-time 600 http://localhost/cron/purgeQueue.php\n*/3 * * * *     php /var/www/www.bnow.tv/cron/gcOldBroadcasts.php\n5 * * * *       php /var/www/www.bnow.tv/cron/recalcYounowPopularTags.php\n0 14 * * *      php /var/www/www.bnow.tv/cron/sendFollowUpMsg.php --followUpPeriodMail 1 --followUpPeriodPushNotification 1\n7 * * * *       php /var/www/www.bnow.tv/cron/countVideoViews.php\n*/10 * * * *    curl -f --silent -o /dev/null --max-time 600 http://localhost/cron/maintenance/recreateFlashbacks.php?limit=30\n10 3 * * *      php /var/www/www.bnow.tv/cron/cleanPHPLogger.php\n*/5 * * * *     php /var/www/www.bnow.tv/cron/catchBouncedEmails.php\n31 3 * * *      /var/deploy/exec.pl \"find /usr/local/WowzaStreamingEngine/logs/wowzastreamingengine_* -mtime +1 -exec rm -f {} \\;\" --keyword wowzalive\n* * * * *       php /var/www/www.bnow.tv/cron/cleanCurrentBroadcasts.php\n* * * * *       php /var/www/www.bnow.tv/cron/detectDDoS.php\n0 */1 * * *     php /var/www/www.bnow.tv/cron/updateStoreMetrics.php\n*/5 * * * *     php /var/www/www.bnow.tv/cron/cleanBroadcastCount.php\n30 7 * * *      php /var/www/www.bnow.tv/cron/setGlobalSpenders.php --period 30 --doit 1\n\n* * * * * php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"MediaServerAutoscale\" '{\"region\": 0, \"asgName\": \"YouNow-Live-Wowza-4ZEN5XNMLHWO-ASG-1BTQY0XC8VSRS\"}' >/dev/null\n* * * * * sleep 5 && php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"MediaServerAutoscale\" '{\"region\": 1, \"asgName\": \"EU-YouNow-Live-Wowza-1IJXJ93SSOSPO-ASG-1FFMP80N5ZPSH\"}' >/dev/null\n* * * * * sleep 7 && php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"MediaServerAutoscale\" '{\"region\": 0, \"asgName\": \"YouNow-Live-WowzaVIP-1RLFGBWCCRCSU-ASG-2LFP2TI2PQA\", \"group\": \"vip\"}' >/dev/null\n* * * * * sleep 10 && php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"MediaServerAutoscale\" '{\"region\": 1, \"asgName\": \"EU-YouNow-Live-WowzaVIP-19BLSE73VSQ0L-ASG-ZIWD6ED7A3TG\", \"group\": \"vip\"}' >/dev/null\n#* * * * * sleep 15 && php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"MediaServerAutoscale\" '{\"region\": 2, \"asgName\": \"SA-YouNow-Live-Wowza-1T1GPGFV5XTJ5-ASG-1B7TSNA2264QI\"}' >/dev/null\n* * * * * sleep 20 && php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"MediaServerAutoscale\" '{\"region\": 2, \"asgName\": \"SA-YouNow-Live-WowzaVIP-1QLODC9WHOPTL-ASG-ZN8Y415NKJ0Y\", \"group\": \"vip\"}' >/dev/null\n\n* * * * * php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"McuPipelineAutoscale\" '{\"region\": 0, \"asgName\": \"YouNow-Live-McuPipeline-1LWF2F8N3C9BF-ASG-1X0E9TLH8734Q\"}' >/dev/null\n* * * * * sleep 5 && php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"McuPipelineAutoscale\" '{\"region\": 1, \"asgName\": \"EU-YouNow-Live-McuPipeline-1N83C03U0CVMW-ASG-1RZ7E3SOUCC6X\"}' >/dev/null\n* * * * * sleep 7 && php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"McuPipelineAutoscale\" '{\"region\": 0, \"asgName\": \"YouNow-Live-McuPipelineVIP-1BJOKVFZJV3K9-ASG-NGI0CCDVW7S6\", \"group\": \"vip\"}' >/dev/null\n* * * * * sleep 10 && php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"McuPipelineAutoscale\" '{\"region\": 1, \"asgName\": \"EU-YouNow-Live-McuPipelineVIP-1PDJ5GMDGMUCS-ASG-HRDAFB6GQ79L\", \"group\": \"vip\"}' >/dev/null\n#* * * * * sleep 15 && php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"McuPipelineAutoscale\" '{\"region\": 2, \"asgName\": \"SA-YouNow-Live-McuPipeline-T0DVCO1SR0T9-ASG-121309ENRY6X3\"}' >/dev/null\n* * * * * sleep 20 && php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"McuPipelineAutoscale\" '{\"region\": 2, \"asgName\": \"SA-YouNow-Live-McuPipelineVIP-4CJFWNF5SSOU-ASG-UJREPKYNTYDN\", \"group\": \"vip\"}' >/dev/null\n* * * * * sleep 25 && php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"McuPipelineAutoscale\" '{\"region\": 0, \"asgName\": \"YouNow-Live-McuPipelineSpecial-C2BYHPWPZ1Y5-ASG-16LNG9MGTXEQJ\", \"group\": \"special\"}' >/dev/null\n\n* * * * * php /var/www/www.bnow.tv/cron/publishMcuPipelineStats.php >/dev/null\n\n*/5 * * * *             php /var/www/www.bnow.tv/cron/monitorKinesis.php   > /dev/null\n*/5 * * * *             php /var/www/www.bnow.tv/cron/monitorRedisStickyKeys.php  > /dev/null\n1 */6 * * *             php /var/www/www.bnow.tv/cron/copyDevicesToRedshift.php  > /dev/null\n\n20 * * * *\tphp /var/www/www.bnow.tv/cron/importCloudFrontLogs.php\n\n0 2 * * *       php /var/www/www.bnow.tv/cron/experimentsGarbageCollect.php\n0 1 1 * *     php /var/www/www.bnow.tv/cron/monitorVipSpenders.php\n*/5 * * * * php /var/www/www.bnow.tv/cron/calculateLeaderboards.php\n5 * * * * php /var/www/www.bnow.tv/cron/gcLeaderboards.php\n\n*/5 * * * * python /var/monitors/instance-database/ec2.py --refresh-cache live > /dev/null 2>&1\n\n# run garbage cleanup\n# ---------------------------------------\n# 15 10 * * *     php /var/www/www.bnow.tv/cron/garbageCollection.php --mark-delete >/dev/null 2>&1\n\n# run every 15 min from 12AM - 6AM and 2PM - 12AM\n#*/15 0-5,14-23 * * *    php /var/www/www.bnow.tv/cron/garbageCollection.php --delete >/dev/null 2>&1\n\n# run every 7 min from 6AM - 2PM\n#*/7 6-13 * * *    php /var/www/www.bnow.tv/cron/garbageCollection.php --delete >/dev/null 2>&1\n\n10 * * * *       php /var/www/www.bnow.tv/cron/DisengagedPushCampaign2.php --doit 1 --test 0 --experiment 0  > /dev/null\n5 * * * *       php /var/www/www.bnow.tv/cron/sendGenericPush.php --doit 1 > /dev/null\n5 0 * * *       php /var/www/www.bnow.tv/cron/cleanUpEngagementTable.php --doit 1 > /dev/null\n5 1 * * *       php /var/www/www.bnow.tv/cron/setTopOfflineBroadcasters.php --doit 1 > /dev/null\n\n# run daily fanship import job (8AM every morning)\n0 8 * * * php /var/www/www.bnow.tv/cron/updateFanshipScore.php daily reset\n\n# report on fakeUsers every 15 min\n*/15 * * * *  php /var/www/www.bnow.tv/cron/scaling/fakeUsersCleaner.php --dryrun=1\n\n\nCA_PROD\n/bin/chown apache: /var/spool/cron/apache\nelse\nperl /var/monitors/startup-vpc.pl --get dev dev\ncat >/var/spool/cron/apache<<CA_DEV\n* * * * *       php /var/www/www.bnow.tv/cron/processLocalJobQueue.php\n15 2 * * *\t\tphp /var/www/www.bnow.tv/cron/doCleanup.php\n*/5 * * * *\t\tphp /var/www/www.bnow.tv/cron/updateWowzaServerFileBackLogMetric.php\n* * * * *\t\tphp /var/www/www.bnow.tv/cron/clearSuspendedUsers.php\n12 * * * *\t\tphp /var/www/www.bnow.tv/cron/doCleanupHourly.php\n9 * * * *\t\tphp /var/www/www.bnow.tv/cron/tracker/trackerTester.php\n* * * * *\t\tphp /var/www/www.bnow.tv/cron/scaling/spikeDetector.php\n*/5 * * * *\t\tphp /var/www/www.bnow.tv/cron/cleanSessions.php\n* * * * *\t\tphp /var/www/www.bnow.tv/cron/recalcYounowTags.php\n*/5 * * * *\t\tphp /var/www/www.bnow.tv/cron/moveUsersToRedshift.php\n15 1 * * *\t\tphp /var/www/www.bnow.tv/cron/moveUserVaultSnapshot.php\n*/5 * * * *\t\tphp /var/www/www.bnow.tv/cron/cancelPendingGoodieTrans.php\n0 * * * *       php /var/www/www.bnow.tv/cron/updateUninstalledDevices.php --period 1 --sleepBetweenBulks 10000\n25 0 * * *\t\tphp /var/www/www.bnow.tv/cron/calcBroadcasterRetentionScore.php\n*/15 * * * *    php /var/www/www.bnow.tv/cron/monitorPeopleSearch.php\n0 6 * * *       php /var/www/www.bnow.tv/cron/cleanupPeopleSearch.php\n0 3 15 * *      php /var/www/www.bnow.tv/cron/populateSearch.php\n0 7 * * *       php /var/www/www.bnow.tv/cron/cleanupRiskyUsers.php\n0 0 1 * *       php /var/www/www.bnow.tv/cron/cleanUpInactiveUsers.php\n*/5 * * * *     php /var/www/www.bnow.tv/cron/updateChatLogsTable.php\n* * * * *       php /var/www/www.bnow.tv/cron/updateConcurrentBroadcastersMetric.php\n30 * * * *      php /var/www/www.bnow.tv/cron/updatePushNotificationsMetrics.php\n0 5 * * *       php /var/www/www.bnow.tv/cron/cleanupBroadcasts.php\n30 5 * * *      php /var/www/www.bnow.tv/cron/calcActiveVIPUsers.php\n0 3 * * *       php /var/www/www.bnow.tv/cron/gcRedisKeys.php\n30 3 * * *      php /var/www/www.bnow.tv/cron/optimizeRedshift.php\n25 0 * * *      php /var/www/www.bnow.tv/cron/copyFanshipToRedshift.php\n1 */6 * * *             php /var/www/www.bnow.tv/cron/copyDevicesToRedshift.php  > /dev/null\n0 0 * * *       php /var/www/www.bnow.tv/cron/copySubscribersToRedshift.php\n0 1 * * *       php /var/www/www.bnow.tv/cron/monitorSubscriptions.php\n\n*/5 * * * *\tpython /var/monitors/instance-database/ec2.py --refresh-cache dev > /dev/null\n\n# run preservation request every 2 min\n# ---------------------------------------\n*/2 * * * *     php /var/monitors/preservation_request.php 2>/dev/null >/dev/null\n\n# search engine optimization static crons\n# ---------------------------------------\n# prerender - registered user (every 5 min)\n*/5 * * * *\t\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php registered --prerender --minutes=10  2>/dev/null >/dev/null\n\n# prerender - tags (daily)\n0 0 * * *\t\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php tags --prerender 2>/dev/null >/dev/null\n\n# prerender - users modified their profile with user level >= 50, in respect to events (daily)\n0 0 * * 1-6\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php events --prerender --minutes=1440 --min-user-level=50 2>/dev/null >/dev/null\n\n# prerender - all users modified their profile, in respect to events (weekly)\n0 0 * * 0\t\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php events --prerender --minutes=10080 --min-user-level=0 2>/dev/null >/dev/null\n\n# prerender - static pages (weekly)\n0 0 * * 0\t\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php sites --prerender 2>/dev/null >/dev/null\n\n# sitemap - static pages (daily)\n0 0 * * *\t\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php sites --sitemap 2>/dev/null >/dev/null\n\n# sitemap - tags (daily)\n15 0 * * *\t\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php tags --sitemap 2>/dev/null >/dev/null\n\n# sitemap - all users (weekly)\n30 0 * * 0\t\tphp /var/www/www.bnow.tv/cron/maintenance/searchEngineOptimization.php users --sitemap 2>/dev/null >/dev/null\n\n# Estimated Earnings for Partners \n# ---------------------------------------\n0 4 * * *       php /var/www/www.bnow.tv/cron/calcRecentSupporters.php --doit 1\n0 4 * * *       php /var/www/www.bnow.tv/cron/cleanUpRecentPosts.php --doit 1\n\n*/5 * * * *\tphp /var/www/www.bnow.tv/cron/updateCronCount.php > /dev/null\n\n*/5 * * * *             php /var/www/www.bnow.tv/cron/updateActiveUsers_30_60_days.php\n50 * * * *              php /var/www/www.bnow.tv/cron/cleanupTempVideos.php\n3 * * * *               php /var/www/www.bnow.tv/cron/updateFooterFeeds.php\n* * * * *               php /var/www/www.bnow.tv/cron/gcOldBroadcasts.php\n2 * * * *               php /var/www/www.bnow.tv/cron/recalcYounowPopularTags.php\n*/5 * * * *     php /var/www/www.bnow.tv/cron/sendFollowUpMsg.php --followUpPeriodMail 300 --followUpPeriodPushNotification 300 --workInSec true\n0 * * * *       php /var/www/www.bnow.tv/cron/experimentsGarbageCollect.php\n* * * * *               php /var/www/www.bnow.tv/cron/cleanUpOnlineUsers.php\n\n* * * * * php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"MediaServerAutoscale\" '{\"region\": 0, \"asgName\": \"YouNow-Dev-Wowza-4O7CE7954KQ-ASG-BVQKN78U7Z7Z\"}'\n* * * * * php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"McuPipelineAutoscale\" '{\"region\": 0, \"asgName\": \"YouNow-Dev-McuPipeline-1TZU6OMCU48S9-ASG-P41COHV3FZO7\"}'\n* * * * * php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"MediaServerAutoscale\" '{\"region\": 1, \"asgName\": \"EU-YouNow-Dev-Wowza-J2RSU3K0FQTF-ASG-1JMAOU9CCIEU9\"}'\n* * * * * php \"/var/www/www.bnow.tv/cron/manager/localMain.php\" \"McuPipelineAutoscale\" '{\"region\": 1, \"asgName\": \"EU-YouNow-Dev-McuPipeline-EO5MFRWONSHS-ASG-1VPIAKUC54Q35\"}'\n\n* * * * * php /var/www/www.bnow.tv/cron/publishMcuPipelineStats.php >/dev/null\n*/5 * * * *             php /var/www/www.bnow.tv/cron/monitorKinesis.php   > /dev/null\n\n5 * * * *       php /var/www/www.bnow.tv/cron/sendGenericPush.php --doit 1 > /dev/null\n5 0 * * *       php /var/www/www.bnow.tv/cron/cleanUpEngagementTable.php --doit 1 > /dev/null\n5 1 * * *       php /var/www/www.bnow.tv/cron/setTopOfflineBroadcasters.php --doit 1 > /dev/null\n5 9 * * *\tphp /var/www/www.bnow.tv/cron/setAllLocalesSpenders.php --doit 1 --period 30\n*/10 * * * *     php /var/www/www.bnow.tv/cron/monitorVipSpenders.php      \n*/10 * * * * php /var/www/www.bnow.tv/cron/calculateLeaderboards.php\n*/15 * * * * php /var/www/www.bnow.tv/cron/gcLeaderboards.php\n\n\n\n# run garbage cleanup\n# ---------------------------------------\n15 10 * * *     php /var/www/www.bnow.tv/cron/garbageCollection.php --mark-delete >/dev/null 2>&1\n*/15 * * * *    php /var/www/www.bnow.tv/cron/garbageCollection.php --delete >/dev/null 2>&1\nCA_DEV\n/bin/chown apache: /var/spool/cron/apache\ntruncate -s 0 /var/spool/cron/root\nfi\n\n## Publish to SNS to confirm complete bootstrap.\nMSG=\"$(hostname) has completed bootstrap. Uptime: $(uptime)\"\naws sns publish --topic-arn $SNS_TOPIC --subject \"Bootstrap Report\" --message \"$MSG\"\n} | tee $LOG\n","diskText":"dcc1c7aec9f8820a326453f037768a68","path":"/Users/Mo/git/aws-tools/bootstrap/static_cron.sh"}]